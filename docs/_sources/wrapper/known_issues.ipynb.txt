{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "7d8fbd19-c961-40b7-b132-3af17be77988",
   "metadata": {},
   "outputs": [],
   "source": [
    "import h5rdmtoolbox as h5tbx"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8df3198b-69f8-4961-bf91-ad67ad85eef6",
   "metadata": {},
   "source": [
    "The shape is not complete shown in `arr2d` because dimension scales are only partly assigned:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "318bef93-a8c5-40b4-8f99-21a1f9a06878",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<head><style>/*\r\n",
       "CSS inspired by xarray: https://github.com/pydata/xarray\r\n",
       "*/\r\n",
       ".h5tb-header > div,\r\n",
       ".h5tb-header > ul {\r\n",
       "    display: inline;\r\n",
       "    margin-top: 0;\r\n",
       "    margin-bottom: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dataarray-cls,\r\n",
       ".h5tb-dataarray-name {\r\n",
       "    margin-left: 2px;\r\n",
       "    margin-right: 10px;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dataarray-name {\r\n",
       "    color: #000;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections {\r\n",
       "    list-style: none;\r\n",
       "    padding: 3px;\r\n",
       "    margin: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections input {\r\n",
       "    display: none;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections label {\r\n",
       "    display: inline;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input + label > span {\r\n",
       "    display: inline;\r\n",
       "    margin-left: 4px;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input:checked + label > span {\r\n",
       "    display: none;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections input:enabled + label {\r\n",
       "    cursor: pointer;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections input:not(.h5tb-values-in) ~ ul {\r\n",
       "    display: none;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections input:not(.h5tb-values-in):checked ~ ul {\r\n",
       "    display: block;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input + label {\r\n",
       "    width: 140px;\r\n",
       "    color: #555;\r\n",
       "    font-weight: 500;\r\n",
       "    padding: 4px 0 2px 0;\r\n",
       "}\r\n",
       "\r\n",
       "\r\n",
       ".h5grp-sections > li > input + label:before {\r\n",
       "    display: inline-block;\r\n",
       "    content: '+';\r\n",
       "    font-size: 11px;\r\n",
       "    width: 15px;\r\n",
       "    text-align: center;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input:disabled + label:before {\r\n",
       "    color: #777;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input:checked + label:before {\r\n",
       "    content: '-';\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list {\r\n",
       "    display: inline-block !important;\r\n",
       "    list-style: none;\r\n",
       "    padding: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list li {\r\n",
       "    display: inline-block;\r\n",
       "    padding: 0;\r\n",
       "    margin: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list:before {\r\n",
       "    content: '(';\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list:after {\r\n",
       "    content: ')';\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list li:not(:last-child):after {\r\n",
       "    content: ',';\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-has-index {\r\n",
       "    text-decoration: underline;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list {\r\n",
       "    list-style: none;\r\n",
       "    padding: 0;\r\n",
       "    margin: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list > li {\r\n",
       "    background-color: #fcfcfc;\r\n",
       "    overflow: hidden;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list > li:nth-child(odd) {\r\n",
       "    background-color: #efefef;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list li:hover {\r\n",
       "    background-color: rgba(3, 169, 244, .2);\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list li > span {\r\n",
       "    display: inline-block;\r\n",
       "}\r\n",
       "\r\n",
       "input.h5tb-varname-in + label {\r\n",
       "    width: 140px;\r\n",
       "    padding-left: 0;\r\n",
       "    font-weight: bold;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dataset {\r\n",
       "    width: 100px;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-attributevalue {\r\n",
       "    width: 100px;\r\n",
       "    text-align: left;\r\n",
       "    color: #888;\r\n",
       "    white-space: nowrap;\r\n",
       "    font-size: 12px;\r\n",
       "}\r\n",
       "\r\n",
       "input.h5tb-varname-in + label:before {\r\n",
       "    content: ' ';\r\n",
       "    display: inline-block;\r\n",
       "    font-size: 11px;\r\n",
       "    width: 15px;\r\n",
       "    padding-left: 2px;\r\n",
       "    padding-right: 2px;\r\n",
       "    text-align: center;\r\n",
       "    color: #aaa;\r\n",
       "    text-decoration: none !important;\r\n",
       "}\r\n",
       "\r\n",
       "input.h5tb-varname-in:enabled + label:hover:before {\r\n",
       "    color: #000;\r\n",
       "}\r\n",
       "\r\n",
       "input.h5tb-varname-in:checked + label:before {\r\n",
       "    color: #ccc;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dims {\r\n",
       "    width: 280px;\r\n",
       "    white-space: nowrap;\r\n",
       "}\r\n",
       "\r\n",
       "\r\n",
       ".h5tb-unit {\r\n",
       "    width: 96px;\r\n",
       "    white-space: nowrap;\r\n",
       "    padding-right: 2px;\r\n",
       "    text-align: right;\r\n",
       "    color: #555;\r\n",
       "    font-style: italic;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-attr-list {\r\n",
       "    list-style: none;\r\n",
       "    background-color: #fff;\r\n",
       "    padding-bottom: 6px;\r\n",
       "    color: #555;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-attr-list li,\r\n",
       ".h5tb-attr-list li:hover {\r\n",
       "    background-color: #fff;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-highlight {\r\n",
       "    background-color: rgba(3, 169, 244, .2);\r\n",
       "    cursor: pointer;\r\n",
       "}</style></head>\n",
       "<p>tmp0.hdf</p>\n",
       "<p>Check resuted in 1 issues.</p>\n",
       "\n",
       "<div class='h5tb-warp'>\n",
       "\n",
       "          <ul style=\"list-style-type: none;\" class=\"h5grp-sections\">\n",
       "                <li>\n",
       "                    <input id=\"group-ds-/-5422185300\" type=\"checkbox\" checked>\n",
       "                    <label style=\"font-weight: bold\" for=\"group-ds-/-5422185300\">\n",
       "                    /<span>(3)</span></label>\n",
       "              \n",
       "\n",
       "                <ul class=\"h5tb-attr-list\"><li style=\"list-style-type: none; font-style: italic\">__h5rdmtoolbox_version__ : 0.1.10</li><li style=\"list-style-type: none; font-style: italic\">__standard_name_table__ : EmptyStandardizedNameTable-v0</li><li style=\"list-style-type: none; font-style: italic\">__wrcls__ : H5File</li>\n",
       "                </ul>\n",
       "\n",
       "                    <ul id=\"ds-1-/arr2d-5424759600\" class=\"h5tb-var-list\">\n",
       "                    <input id=\"ds-2-/arr2d-5424766200\" class=\"h5tb-varname-in\" type=\"checkbox\">\n",
       "                    <label class='h5tb-varname' \n",
       "                        for=\"ds-2-/arr2d-5424766200\">arr2d</label>\n",
       "                    <span class=\"h5tb-dims\">(y: 4)</span>  [\n",
       "                    <span class=\"h5tb-unit\">-</span>]\n",
       "<ul class=\"h5tb-attr-list\"><li style=\"list-style-type: none; font-style: italic\">long_name : long</li>\n",
       "\n",
       "                </ul>\n",
       "\n",
       "             </ul>\n",
       "             \n",
       "\n",
       "                    <ul id=\"ds-1-/x-5425386400\" class=\"h5tb-var-list\">\n",
       "                    <input id=\"ds-2-/x-5425390200\" class=\"h5tb-varname-in\" type=\"checkbox\">\n",
       "                    <label class='h5tb-varname' \n",
       "                        for=\"ds-2-/x-5425390200\">x</label>\n",
       "                    <span class=\"h5tb-dims\">(5,)</span>  [\n",
       "                    <span class=\"h5tb-unit\">-</span>]\n",
       "<ul class=\"h5tb-attr-list\"><li style=\"list-style-type: none; font-style: italic\">long_name : x</li>\n",
       "\n",
       "                </ul>\n",
       "\n",
       "             </ul>\n",
       "             \n",
       "\n",
       "                    <ul id=\"ds-1-/y-5425880900\" class=\"h5tb-var-list\">\n",
       "                    <input id=\"ds-2-/y-5425884300\" class=\"h5tb-varname-in\" type=\"checkbox\">\n",
       "                    <label class='h5tb-varname' \n",
       "                        for=\"ds-2-/y-5425884300\">y</label>\n",
       "                    <span class=\"h5tb-dims\">(4,)</span>  [\n",
       "                    <span class=\"h5tb-unit\">-</span>]\n",
       "<ul class=\"h5tb-attr-list\"><li style=\"list-style-type: none; font-style: italic\">long_name : y</li>\n",
       "\n",
       "                </ul>\n",
       "\n",
       "             </ul>\n",
       "             \n",
       "</li>\n",
       "</ul>\n",
       "</div>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "with h5tbx.H5File() as h5:\n",
    "    h5.create_dataset('arr2d', shape=(4, 5), units='', long_name='long')\n",
    "    h5.create_dataset('y', shape=(4, ), units='', long_name='y', make_scale=True)\n",
    "    h5.create_dataset('x', shape=(5, ), units='', long_name='x', make_scale=True)\n",
    "    h5.arr2d.dims[0].attach_scale(h5.y)\n",
    "    h5.dump()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "92c10f2c-94ee-4f35-b644-bdeef60a62f8",
   "metadata": {},
   "outputs": [],
   "source": [
    "hdf_fpath = r'C:\\Users\\da4323\\bwsyncandshare\\DDE2_ParticleCounting\\Paper2022\\notebooks\\dataset_generation\\training_data\\Set8\\sig\\set8.hdf'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c0599621-0e53-4df4-8a7b-b28a5e8b76a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pymongo\n",
    "from pymongo import MongoClient\n",
    "from h5rdmtoolbox.database import mongo\n",
    "\n",
    "client = MongoClient()\n",
    "db = client['sig']\n",
    "collection = db['test']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9e16fe8a-b33b-4094-afb3-e269b87c1366",
   "metadata": {},
   "outputs": [],
   "source": [
    "fill_db=False\n",
    "if fill_db:\n",
    "    collection.drop()\n",
    "    with h5tbx.H5File(hdf_fpath) as h5:\n",
    "        for grp in h5.find({'$group': {'$regex': 'config_[0-9]'}}):\n",
    "            ds=grp.find_one({'standard_name': 'synthetic_particle_image'})\n",
    "            ds.mongo.insert(0, collection)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ee19f009-82ec-4eec-9f6b-64b84a6fef2c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# with h5tbx.H5File(hdf_fpath) as h5:\n",
    "#     h5.dump()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d7769091-7c1a-40a8-bd13-df71370819f7",
   "metadata": {},
   "outputs": [],
   "source": [
    "from pprint import pprint"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "320ef1be-3555-43a5-83ef-1f350b373d77",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "560"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "collection.count_documents({'Number of saturated pixel': {'$gte': 0}})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9d2c0ca7-eda8-4a79-8028-f496958a4c89",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'_id': ObjectId('630ce0e71db4d045cdb72795'),\n",
       " 'filename': 'C:\\\\Users\\\\da4323\\\\bwsyncandshare\\\\DDE2_ParticleCounting\\\\Paper2022\\\\notebooks\\\\dataset_generation\\\\training_data\\\\Set8\\\\sig\\\\set8.hdf',\n",
       " 'path': '/config_00/images',\n",
       " 'name': 'images',\n",
       " 'file_creation_time': datetime.datetime(2022, 8, 29, 15, 38, 33, 433000),\n",
       " 'shape': [10, 64, 64],\n",
       " 'ndim': 3,\n",
       " 'hdfobj': 'dataset',\n",
       " 'slice': [[0, 1, 1], [0, None, 1], [0, None, 1]],\n",
       " 'image_index': 0,\n",
       " 'Number of particle used to create image': 41.0,\n",
       " 'Pourcentage of particle used to create image': 100.0,\n",
       " 'Particle density in the image': 0.010009765625,\n",
       " 'Number of particle in a window of 16x16 pixels': 2.5625,\n",
       " 'Number of particle in a window of 32x32 pixels': 10.25,\n",
       " 'Number of particle in a window of 64x64 pixels': 41.0,\n",
       " 'Minimum X particle location in pixel': 0.0,\n",
       " 'Maximum X particle location in pixel': 63.0,\n",
       " 'Minimum Y particle location in pixel': 0.0,\n",
       " 'Maximum Y particle location in pixel': 63.0,\n",
       " 'Minimum X particle location in real space': 0.000658600009046495,\n",
       " 'Maximum X particle location in real space': 0.0994499996304512,\n",
       " 'Minimum Y particle location in real space': 0.001370999962091446,\n",
       " 'Maximum Y particle location in real space': 0.099590003490448,\n",
       " 'Minimum Z particle location in real space': 0.0007849999819882214,\n",
       " 'Maximum Z particle location in real space': 0.0982699990272522,\n",
       " 'Volume of the particle in the real space': 0.0009458999847993255,\n",
       " 'Particle density in the real space': 43340.0,\n",
       " 'Minimum grey level in the image': 0.0,\n",
       " 'Maximum grey level in the image': 255.0,\n",
       " 'Mean grey level of the image': 10.5,\n",
       " 'Std grey level of the image': 44.900001525878906,\n",
       " 'Number of saturated pixel': 94.0,\n",
       " 'Pourcentage of saturated pixel': 2.2899999618530273,\n",
       " 'Minimum value of the background noise': 0.0,\n",
       " 'Maximum value of the background noise': 0.0,\n",
       " 'Mean value of the background noise': 0.0,\n",
       " 'Std of the background noise': 0.0,\n",
       " 'Number of modified pixel during particle addition': 516.0,\n",
       " 'Pourcentage of modified pixel during particle addition': 12.597999572753906,\n",
       " 'Minimum sheet level for the particle': 0.616100013256073,\n",
       " 'Maximum sheet level for the particle': 1.0,\n",
       " 'Mean sheet level for the particle': 0.8590999841690063,\n",
       " 'Std sheet level for the particle': 0.11860000342130661,\n",
       " 'Minimun particle diameter': 0.5174000263214111,\n",
       " 'Maximum particle diameter': 3.874500036239624,\n",
       " 'Mean particle diameter': 2.047100067138672,\n",
       " 'Std particle diameter': 0.8532999753952026,\n",
       " 'Minimum particle level': 0.30000001192092896,\n",
       " 'Maximum particle level': 2887.3798828125,\n",
       " 'Mean particle level': 825.1099853515625,\n",
       " 'Std particle level': 725.5999755859375,\n",
       " 'long_name': 'synthetic PIV images',\n",
       " 'standard_name': 'synthetic_particle_image',\n",
       " 'units': 'counts'}"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#collection.find_one({'Number of saturated pixel': {'$gt': 0.}})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "14528e85-480b-4dc5-888d-e4c85df33814",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ERROR! Session/line number was not unique in database. History logging moved to new session 7426\n",
      "(1, 64, 64)\n",
      "(1, 64, 64)\n",
      "(1, 64, 64)\n",
      "(1, 64, 64)\n",
      "(1, 64, 64)\n",
      "(1, 64, 64)\n",
      "(1, 64, 64)\n",
      "(1, 64, 64)\n",
      "(1, 64, 64)\n",
      "(1, 64, 64)\n",
      "(1, 64, 64)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "KeyboardInterrupt\n",
      "\n"
     ]
    }
   ],
   "source": [
    "with h5tbx.H5File(hdf_fpath) as h5:\n",
    "    for r in collection.find({'Number of saturated pixel': {'$gt': 0.}}):\n",
    "        print(h5[r['path']].mongo.slice(r['slice']).shape)\n",
    "        \n",
    "# generator --> H5Files --> compute properties"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2e3efdd6-ac58-4652-8979-dd4cf1fded8e",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "10ff107f-b076-4023-9371-32fac9a080d4",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
