{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "897c6a94-d44e-4b89-bcb2-56a913faaafb",
   "metadata": {},
   "source": [
    "# Quick Overview"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe30cac8-1a28-46e1-b886-8b10979c4098",
   "metadata": {},
   "source": [
    "This chapter gives a quick overview into how to use the package. Detailed explanations can be found in the subchapters of the respective sub-classes."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e3d38b11-9866-4d04-ae68-2354cf992ac1",
   "metadata": {},
   "source": [
    "Import the package and give it an alias, e.g. `h5tbx`. Next, select the *convention*, which sets requirements to the content of an HDF5 file and enables specific features. For a start, we stick to the \"default\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "56d821ed-27db-46eb-9206-435ac5208f53",
   "metadata": {},
   "outputs": [],
   "source": [
    "import h5rdmtoolbox as h5tbx\n",
    "h5tbx.use('default')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a80c93e7-6d5f-4187-896e-f8223d0449c3",
   "metadata": {},
   "source": [
    "## Create an HDF file\n",
    "\n",
    "We recommend using python's context manager. If no filename is passed to the wrapper file, then a *temporary file* is created. This file is deleted when you python program finishes/the kernel is stopped. Per default, the mode is `r+`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "641d270b-6c02-4296-8ec7-34dc05af90df",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "tmp0.hdf\n"
     ]
    }
   ],
   "source": [
    "with h5tbx.File() as h5:\n",
    "    print(h5.hdf_filename.name)  # equal to h5.filename but a pathlib.Path and exists also after the file is closed"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "43ec3475-ae2f-47b6-a515-da57c9af52b1",
   "metadata": {},
   "source": [
    "## Create a dataset\n",
    "\n",
    "Assume we have a signal over time as numpy-arrays (`signal` and `time`). The set the relationship between the signal and the time vector, `HDF dimension scales` are used. (https://docs.h5py.org/en/stable/high/dims.html). By passing `make_scale=True` during `create_dataset`, `time` becomes the scale, while the signal-datasets gets it attached (`attach_scale`):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "72fc4043-cecc-4cc1-9297-484fa458973b",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "time = np.linspace(0, np.pi/4, 21)\n",
    "signal = np.sin(2*np.pi*3*time)\n",
    "\n",
    "with h5tbx.File() as h5:\n",
    "    signal_filename = h5.hdf_filename\n",
    "    \n",
    "    ds_time = h5.create_dataset(name='time',\n",
    "                                data=time, \n",
    "                                attrs={'units': 's'},\n",
    "                                make_scale=True)\n",
    "    \n",
    "    ds_signal = h5.create_dataset(name='signal',\n",
    "                                  data=signal,\n",
    "                                  attrs={'units': 'V'},\n",
    "                                  attach_scale=ds_time)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a1ea2c4b-2423-4d04-a43f-44feab4067d2",
   "metadata": {},
   "source": [
    "## Working with datasets:\n",
    "The return object of a sliced HDF5 dataset is a [`xarray.DataArray` object](https://docs.xarray.dev/en/stable/user-guide/data-structures.html) as they allow having dimensions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c84a0f05-98f3-4012-bab4-2a783b685d41",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       "html[theme=dark],\n",
       "body[data-theme=dark],\n",
       "body.vscode-dark {\n",
       "  --xr-font-color0: rgba(255, 255, 255, 1);\n",
       "  --xr-font-color2: rgba(255, 255, 255, 0.54);\n",
       "  --xr-font-color3: rgba(255, 255, 255, 0.38);\n",
       "  --xr-border-color: #1F1F1F;\n",
       "  --xr-disabled-color: #515151;\n",
       "  --xr-background-color: #111111;\n",
       "  --xr-background-color-row-even: #111111;\n",
       "  --xr-background-color-row-odd: #313131;\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  display: block !important;\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-text-repr-fallback {\n",
       "  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-index-preview {\n",
       "  grid-column: 2 / 5;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data,\n",
       ".xr-index-data-in:checked ~ .xr-index-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-index-name div,\n",
       ".xr-index-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data,\n",
       ".xr-index-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt,\n",
       ".xr-attrs dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2,\n",
       ".xr-no-icon {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;signal&#x27; (time: 21)&gt;\n",
       "array([ 0.        ,  0.6744506 ,  0.9959207 ,  0.7961657 ,  0.17972937,\n",
       "       -0.53077013, -0.96348575, -0.89195141, -0.35360535,  0.36980363,\n",
       "        0.89967217,  0.95868823,  0.51596517, -0.19679344, -0.80655823,\n",
       "       -0.99420266, -0.66152114,  0.01737412,  0.68717646,  0.99733809,\n",
       "        0.78553281])\n",
       "Coordinates:\n",
       "  * time     (time) float64 0.0 0.03927 0.07854 0.1178 ... 0.7069 0.7461 0.7854\n",
       "Attributes:\n",
       "    units:    V</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'signal'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 21</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-5a891877-660c-4952-becd-8df7ec6ca996' class='xr-array-in' type='checkbox' checked><label for='section-5a891877-660c-4952-becd-8df7ec6ca996' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>0.0 0.6745 0.9959 0.7962 0.1797 ... 0.01737 0.6872 0.9973 0.7855</span></div><div class='xr-array-data'><pre>array([ 0.        ,  0.6744506 ,  0.9959207 ,  0.7961657 ,  0.17972937,\n",
       "       -0.53077013, -0.96348575, -0.89195141, -0.35360535,  0.36980363,\n",
       "        0.89967217,  0.95868823,  0.51596517, -0.19679344, -0.80655823,\n",
       "       -0.99420266, -0.66152114,  0.01737412,  0.68717646,  0.99733809,\n",
       "        0.78553281])</pre></div></div></li><li class='xr-section-item'><input id='section-cc22818a-2eac-4746-a0fe-9ff31e9430c8' class='xr-section-summary-in' type='checkbox'  checked><label for='section-cc22818a-2eac-4746-a0fe-9ff31e9430c8' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 0.03927 ... 0.7461 0.7854</div><input id='attrs-75a98a99-880f-4c4a-a008-a6b4dba004ce' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-75a98a99-880f-4c4a-a008-a6b4dba004ce' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-24da45cf-241a-4527-9c72-742d4859068c' class='xr-var-data-in' type='checkbox'><label for='data-24da45cf-241a-4527-9c72-742d4859068c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>s</dd></dl></div><div class='xr-var-data'><pre>array([0.      , 0.03927 , 0.07854 , 0.11781 , 0.15708 , 0.19635 , 0.235619,\n",
       "       0.274889, 0.314159, 0.353429, 0.392699, 0.431969, 0.471239, 0.510509,\n",
       "       0.549779, 0.589049, 0.628319, 0.667588, 0.706858, 0.746128, 0.785398])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-d25bf358-6c18-49fd-a20d-a83e92a08d27' class='xr-section-summary-in' type='checkbox'  ><label for='section-d25bf358-6c18-49fd-a20d-a83e92a08d27' class='xr-section-summary' >Indexes: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-465d8154-d921-4469-b77e-14d733217f0c' class='xr-index-data-in' type='checkbox'/><label for='index-465d8154-d921-4469-b77e-14d733217f0c' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Float64Index([                 0.0, 0.039269908169872414,  0.07853981633974483,\n",
       "               0.11780972450961724,  0.15707963267948966,  0.19634954084936207,\n",
       "               0.23561944901923448,   0.2748893571891069,   0.3141592653589793,\n",
       "                0.3534291735288517,  0.39269908169872414,  0.43196898986859655,\n",
       "               0.47123889803846897,   0.5105088062083414,   0.5497787143782138,\n",
       "                0.5890486225480862,   0.6283185307179586,    0.667588438887831,\n",
       "                0.7068583470577035,   0.7461282552275759,\n",
       "                0.7853981633974483],\n",
       "             dtype=&#x27;float64&#x27;, name=&#x27;time&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-a72ada16-788d-4403-a87b-4390cc50538c' class='xr-section-summary-in' type='checkbox'  checked><label for='section-a72ada16-788d-4403-a87b-4390cc50538c' class='xr-section-summary' >Attributes: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>V</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray 'signal' (time: 21)>\n",
       "array([ 0.        ,  0.6744506 ,  0.9959207 ,  0.7961657 ,  0.17972937,\n",
       "       -0.53077013, -0.96348575, -0.89195141, -0.35360535,  0.36980363,\n",
       "        0.89967217,  0.95868823,  0.51596517, -0.19679344, -0.80655823,\n",
       "       -0.99420266, -0.66152114,  0.01737412,  0.68717646,  0.99733809,\n",
       "        0.78553281])\n",
       "Coordinates:\n",
       "  * time     (time) float64 0.0 0.03927 0.07854 0.1178 ... 0.7069 0.7461 0.7854\n",
       "Attributes:\n",
       "    units:    V"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "with h5tbx.File(signal_filename) as h5:\n",
    "    signal_data = h5['signal'][:]\n",
    "signal_data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e111e9e6-5f1b-4e7d-b9a6-17c20406adb7",
   "metadata": {
    "tags": []
   },
   "source": [
    "**Plotting** hence becomes very easy (see `xarray` [documentation](https://docs.xarray.dev/en/stable/index.html) for more):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "2a9f3edb-a5fa-48be-9fb8-13bc9878e92b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYsAAADZCAYAAADR0RzDAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8o6BhiAAAACXBIWXMAAA9hAAAPYQGoP6dpAAA/yklEQVR4nO3deVhTV/oH8G8SSJAtgCwBRREEEUFBrYpL1Yp1G+vSutXWpa0dndr5VW2ntYvU2tbWLtN1dLRV22prN3W0WKpFxQ1FQSyIisiOhJ2wb8n9/RESCQJZyHaT9/M8eR4NN8nhkuS955z3vIfDMAwDQgghpBtcUzeAEEKI+aNgQQghRC0KFoQQQtSiYEEIIUQtChaEEELUomBBCCFELQoWhBBC1KJgQQghRC0bUzfA3MlkMty9exdOTk7gcDimbg4hhPQYwzCoqamBj48PuFzN+gwULNS4e/cufH19Td0MQgjRu/z8fPTt21ejYylYqOHk5ARAflKdnZ1N3BpCCOm56upq+Pr6Kr/fNMGqYHHmzBl88MEHSEpKQlFREQ4dOoS5c+d2+5jTp09j/fr1uH79Onx9ffH6669jxYoVGr+mYujJ2dnZbIOFVMYgMbsCJTWN8HSyw6gBbuBxaciMEDYw5edXm6F1VgWLuro6DBs2DE899RTmz5+v9vjs7GzMmjULq1evxv79+xEXF4dnnnkG3t7emDZtmhFabHixaUXYfDQdRZJG5X3eQjtEzw7B9FBvE7aMEKIOmz6/HLZWneVwOGp7Fi+//DJiYmKQlpamvG/x4sWoqqpCbGysRq9TXV0NoVAIiURidj2L2LQirNmXjI5/QMW1wvYnhpvdG47oF/Uq2cuUn19dvtdY1bPQVkJCAqKiolTumzZtGl544QXTNEiPpDIGm4+m3/dGAwAG8jfc5qPpmBoioi8PC8Wmq1Kiio2fX4teZyEWi+Hl5aVyn5eXF6qrq9HQ0NDpY5qamlBdXa1yM0eJ2RUqXxIdMQCKJI1IzK4wXqOI0SiuSju+B8SSRqzZl4zYtCITtYxogo2fX4sOFrrYunUrhEKh8mauabMlNV2/0XQ5jrCHuqtSQH5VKpWxcoTZKrDx82vRwUIkEqG4uFjlvuLiYjg7O6NXr16dPmbjxo2QSCTKW35+vjGaqjVPJzu9HkfYg41XpUQVGz+/Fj1nERkZiWPHjqncd+LECURGRnb5GIFAAIFAYOim9dioAW4QCe0g7uZLw8XeFqMGuBmxVURXmk5U1zS24Hi6WKPnNKerUqJq1AA3uNjboqq+pctjREI7s/r8sipY1NbWIjMzU/n/7OxspKSkwM3NDf369cPGjRtRWFiIb7/9FgCwevVqfPHFF/jXv/6Fp556CidPnsRPP/2EmJgYU/0KesPjcjAzVITd53O6PEZS34Kj1+5ibkQf4zWMaE3dRHVWaS1O3izByZsluJxTgRapZsNL5nRVSlTVNrZCpmaY0N2BD6mMMZsJblYFiytXrmDy5MnK/69fvx4AsHz5cuzduxdFRUXIy8tT/nzAgAGIiYnBunXr8Omnn6Jv37746quvLGKNhaS+BUeu3QUAOApsUNvUqvyZt9AO/u4OOH+nHOt/SgEDBvMiNFvST4yrq/TJIkkjVu9LhocjH6W1zSo/G9DbHiU1Tahrlnb6nByY31UpUfXusRuobmyFl7MAHADi6iblz3o78FHd2IK0u9VY92MKPl0cDhue6WcMWLvOwljMdZ3Fq4dS8f2lPAR4OODo8+NxLV+iMoTBAfDa4VT8kJgPLgf4aOEwChhmRipjMP79k93OPwCADRcY4++OycGeeCjYEwPcHZRBBkCnefq0xsZ8nc8sw9KvLgEAfl4dieH9XO8bgjyXWYZnvrmMFimDx0b0xbZHh4Krxx4GrbOwEkm5Ffj+krwH9e68MNjzbRAZ0Pu+496ZGwaAgx8S87D+p2tgGGD+cAoY5kLdRLXCzmUP4KFgT5X7pod6Y/sTw+8bvuIA+PeicAoUZqqhWYqNB1MBAMsi++MBP3nvr+Pnd2KQBz5fEoF/7E/GL0kFcBTYIHp2iEkrX5u+b0O00iKV4dWD8hXpC0f2xWj/+4OEApfLwTtzQ/H46H5gGGDDz9fwa1KBsZpK1NB0ArqmsfNJ0Omh3jj38kP4YdUY/HtROLycBWAAVNU3d3o8Mb2PT9xCXkU9fIR2+Nf04G6PnR7qjQ8eGwYA2HshBx+fyDBGE7tEwYJlvjqbjVvFNXBz4GPjjMFqj+dyOXh7TiiWtgWMF3+5hl8oYJgFfaRP8rgcRAb0xryIPlj7UCAA4Ovz2WiVyvTSRqI/1/Kr8PW5bADAO/PC4ChQP7Dz6Ii+2DJnCADg85OZ2BF/x6Bt7A4FCxbJr6jHp3Hyq4vXZg6GqwNfo8dxuRxsmROKJ8bIA8ZLv1zDz1fyIZUxSLhTjv+lFCLhTjkt4jKyUQPc4C3sOhBwIE9W0HSi+rHhfeFqb4v8igb8cb1Y/QOI0TS3yvDyr39BxgBzw30wucOwYneejPTDy229kPd+v4nvEnIM1Mru0ZwFSzAMg9cPp6GxRYZI/96YP1y7dFhFwACAfRfz8NIvf+HtmBuQNNwb4qC6QsbF43IQPTsEq9smqttTjExHzw7ROHWyF5+HJyP98Fncbew8cwczw0S0u6OZ2BF/BzfF8hGBTbOHaP34NZMCUNvUgi9P3cEb/7sOB4EN5oT3MWoRSQoWLBGTWoT4jFLweVy8PS9Upy8BDkceMPIq6nEmo0wlUAD36gpRJo3xjOjvBi4H6NipE+kYuJdF9seO+Du4ViDB5ZxKSp81A7eLa/DFSfn6sOjZIXDTcESgoxcfHoS6Jin2XsjBiz9fw1u/pass6jP0xR4NQ7GApKEFm4+mAwD+MTkAAR6OOj+XjAEyims7/RnVFTK+w1cLIWOAYX2F+GHVGHy6OBw/rBqDcy8/pNOH3t1RgEfbMt52nsnSd3OJlqQyBi//+heapTI8FOyJR4b56PxcHA4Hm/4Wgkj/3pAxuG/1t6GLSFKwYIEP/7iF0pom+Ls7YM2kgB49V2J2RbclQqiukPEwDIOfk+S1xxY+4IvIgN6YE94HkQG9ezSc8MyEAQCAP28U405p5xcGxDi+S8hBcl4VHAU2eHuubiMC7TEAssvquvwZYLiLPQoWZi45rxL7LuUCAN6eFwqBDa9Hz8fGapeW6q8CCTKKayGw4WJ2D644OwrwcETUYHlp/q/OZuvteYl2Cirrse2PWwCAl2cEw8el8+Kl2kjMroC42jQXexQszJh8TUUqGAZ4dHhfjA1w7/FzsrHapaVS9Cqmh4rgbGer1+d+9kF/AMCvyQUoq21SczTRN4Zh8OqhNNQ3SzHKzw1LR/XTy/Oa8mKPgoUZ23M+GzfFNXCxt8Vrs9SvqdCEIl2zq86wtumaRDeNLVIcSZHX9npshP5X1T/g54phvi5obpXhu4RcvT8/6d7B5EKcySgF34aL9x4N01upDlNe7FGwMCPt1z0cSSnEx8flaypenTlY5wyKjhTpmgC6DBjapGsS3RxPL0Z1Yyt8hHZ66TF2xOFw8OwEee/iu4u5aOii6CDRH8Xnd9/FXGw6Iq+y8EJUIPx7kJDSkSkv9ih11kx0VqYaAAZ6OmKBnq88u6orxOMAXzxOabPGoFhF/+iIvgYLzNOGeKGvay8UVDbg1+QCPDGmv0Feh3T++bXhctDPzV6vr6O42FuzLxkcqBaR1GVtjjaoZ2EGutpPGQAyS2rxx3XNNrvRRvu6Qh88NhS2PA6kDOCr5zc3uV+RpAFnb5cCMMwQlIINj4unx8szo74+l03p0AbS1ee3Vcbg+e+v6j2VVXGxJ+qw+l8ktDPoGinqWZhYd/spA/Krhc1H0zE1RKT3qwVFXSGgN+JulCD2uhi/pxUhtI9Qr69DVB1MLgTDyIcU+vd2MOhrLRzpi3+fyEB2WR3+vFGMaUNEBn09a6Pu8wsY5vM7PdQbU0NERl3BTT0LEzOX/ZRnhMm/RH5PFYO2ODEchmHw8xV5FpS+hxc74yCwUQ4/7aJFenpnys+v4mJPH2tzNEHBwsTMZd3DQ8Ge4PO4yCqr63KFN+m5K7mVyCmvhz2fh5lhxpkbWjHWD7Y8Dq7kViIpt9Ior2ktzOXzawwULEzMXNY9ONnZYkKgPCvndwOVCyBQ9ipmhnnDQYMS1frg6WyHueHywpNfnaXehT6Zy+fXGChYmJg5rXuYHiofiopN0/+EOgHqm1sR85c8EBtjCKq9VW2L9GKvi5Fb3nm5CKI9fZeZN2cULEys/bqHjgydCtfR1BAv2HA5uCmuQRbVFNK731PFqGuWon9ve6N/eQR5OWHSIA8wDJQb8JCeM6fPr6FRsDAD00O98dK0Qffdb+hUuI5c7PnKvYB/p96F3inKezw2vK9J9plQLNL76Uo+Kuto61V9mTLYC71s7/8qNfbn19AoddZMNLTIV9iO8XfDklH9jJIK15kZod44e7sMsWliPDd5oFFf25LlldfjYlYFOBxgvpGHoBQiA3pjiI8zrt+txr6LuXh+SqBJ2mFpruRUoqFFBld7W3zx+HCU1TaZ7PNrSNSzMBN/3igBIM+LN1YqXGceHuIFLgdILZQgv6Le6K9vqX5Jlq/YHhfgjj56qD6qCw6Hg1VtvYtvEnLQ2EIlQPTh5E35FraTgz0xbqC7ST+/hkTBwgzcrWrAjaJqcDjApEGa781rCO6OAjzgJx9PN8TKcWskkzH4ta28x4KRpulVKMwa6g1voR3Kapvx8YlbtP+6HsS1XehNCfYycUsMi3XB4ssvv4Sfnx/s7OwwevRoJCYmdnns3r17weFwVG52duaXwnbypvzNNryfq94KBvbEjLasqGOplEKrDwlZ5SisaoCTnY3JV1Db8rgY2zYvtfNMNv7vQAqW7LqI8e+fNNgOa5Ysq7QWWWV1sOVx8GCQ/gtCmhNWBYsff/wR69evR3R0NJKTkzFs2DBMmzYNJSUlXT7G2dkZRUVFylturvmVa1YEi4eCTdurUFBMyCXnVXW7qx7RjGJtxexhPrCz7dnmVT0Vm1aEg8mF991v6C05LZXiszt6QG846XlPEnPDqmDx8ccfY9WqVVi5ciVCQkKwY8cO2NvbY/fu3V0+hsPhQCQSKW9eXubVVWxoluJ8ZhkAKHc3MzWR0A7D+7kAoKGonqpubFFmlhl7bUVH3dUxov3XdfPnDfl8hblc6BkSa4JFc3MzkpKSEBUVpbyPy+UiKioKCQkJXT6utrYW/fv3h6+vL+bMmYPr168bo7kau3CnDE2tMvRx6YUgL/3Vve+pGW29C1rN3TMxfxWhqVWGgZ6OCPd1MWlbzKUOmaWQNLTgco68fMqUwRQszEZZWRmkUul9PQMvLy+IxZ1f/Q4aNAi7d+/G//73P+zbtw8ymQxjx45FQUFBl6/T1NSE6upqlZshxbV1Y6cM9jRJ7n1XFKu5E7MraFvOHmhfNNDUf19rqmNkDPEZpZDKGAz0dDR49WBzwJpgoYvIyEgsW7YM4eHhmDhxIg4ePAgPDw/897//7fIxW7duhVAoVN58fX0N1j6GYXDyhnnNVyj4utkjrI8QMgY4fr3Y1M1hpcySWiTnVYHH5WBeRB9TN8eq6hgZQ1zbEJQ19CoAFgULd3d38Hg8FBerfnEVFxdDJNIsw8TW1hYRERHIzMzs8piNGzdCIpEob/n5+T1qd3fSi6ohrm5EL1sexvj3Ntjr6ErRu6ChKN0odsObGOQBT2fTfwGbUx0ytmuVynD6lnwDK3OZazQ01gQLPp+PESNGIC4uTnmfTCZDXFwcIiMjNXoOqVSK1NRUeHt3vfxeIBDA2dlZ5WYoil7F+EB3k2fJdEaRQptwpxxV9VQeQhutUhkOti3EM/XEtgLtv64/SbmVkDS0wMXeFhEmnosyFtYECwBYv349du3ahW+++QY3btzAmjVrUFdXh5UrVwIAli1bho0bNyqPf+utt3D8+HFkZWUhOTkZTzzxBHJzc/HMM8+Y6ldQoZyvMLMhKAV/D0cM8nJCq4zBiXQaitLG2dtlKKlpgqu9LaaY0ZVnV1tyOvB5FlXHyNAUKbOTB3nChseqr1GdaVQbavjw4Vo9KYfDwZEjR9Cnj37HaRctWoTS0lJs2rQJYrEY4eHhiI2NVU565+Xlgcu994errKzEqlWrIBaL4erqihEjRuDChQsICem8SqQxldY04VpBFQB5mQBzNSNMhFvFNYhNE2PBSMPN31gKqYxBYnYFPo3LACBfW8G3Ma8vk/Zbch6/LsaeCznwFtpRoNCCNaXMKnAYDfbQ5HK52LBhAxwd1ad2MgyD9957D+np6fD399dLI02puroaQqEQEolEr0NSP1/Jx0u//IWwPkIcfX683p5X326JazDtkzPg87hIeiPK4hce9URsWhE2H01XSU91d+Tj7bmhZvtFLKlvQcSW45AxwPlXHjJZ3So2ySmrw6QPT8OGy0HypqlwZuFnQpfvNY2rzr700kvw9NQsin700UeaPq3VijPTLKiOgrwc4e/ugKyyOpy8WYI54abP6jFHsWlFWLMv+b4Fb+W1zVizL9lsh3iE9raI6OeKpNxKnMkoxZJR/UzdJLOnGD4eNcCNlYFCVxr1j7Ozs+Hh4aHxk6anp6N///46N8rSNbVKcfa2PJPC3NPuOBzOvayoVFrN3Rm2r4yeGCT/bMe3ZfeQ7sVZ4RAUoGGw6N+/v1Yrn319fcHjmV92j7lIzK5AXbMUHk4ChPoITd0ctWaGya+IT2eUoL651cStMT9sXxmtCBbnM8vQIpWZuDXmrbqxRfl3tJaUWQWNZ96GDh2K0aNHY9euXaipqTFkmyyecghqkCe4LEhTHOLjjL6uvdDYIqOrz06wfWV0WB8h3Bz4qGlqxdW8KlM3x6ydyShFq4xBgIcD/Nwtf9V2exoHi/j4eAwZMgQbNmyAt7c3li9fjrNnzxqybRaJYRjE3WTXyk8Oh6Ncc0Hbrd6P7SujuVwOJgTKy2vHZ3RdwZm027vCynoVgBbBYsKECdi9ezeKiorw+eefIycnBxMnTkRQUBDef//9LuszEVV3SmuRX9EAvg0X4wayp/69YnI27kYx7bDWgSWsjFbOW2RQz7ErUhmDU7fMe22UIWmdAO7g4ICVK1ciPj4eGRkZWLBgAb788kv069cPjzzyiCHaaFEUVyaR/r3hIGDPFugRvi4QOduhrlmKc7fLTN0cs6JYGd3Z9LUigJj7yugJgfJgkVZYjdIaKhzZmeS8SlTVt0DYyxYj+ruaujlG16PVQgMHDsSrr76K119/HU5OToiJidFXuyxW+yqzbMLltsuKoqGo+0wP9cbk4PszBkVCO7NNm23Pw0mAsD7yZAtFph5RpViIN2mQh9Ws2m5P50vbM2fOYPfu3fj111/B5XKxcOFCPP300/psm8Wpqm9GUq68/v1kE++1rYvpoSLsvZCDE+liNLeGmd3KZFPLK68HAKyLCoSfuwM8neRDT+bco2hvYpAHUgsliM8oxfzh5lHPypyctOL5CkDLYHH37l3s3bsXe/fuRWZmJsaOHYvPPvsMCxcuhIODdWUG6EJR/36QlxN83exN3RytPeDnBndHPspqm5GQVa4c5yZAYVUD7pTWgcflYMW4ARD2Yt9irYmDPPDFqUycaXufsiXIGUNeeT1ul9SCx+VgYqB1vu81vjScMWMG+vfvj88//xzz5s3DjRs3cO7cOaxcuZIChYaUe22zbAhKgcfl4OEh8qEo2qtZ1Zm2ieFwXxdWBgpAPi/lZGeDyvoWpBVKTN0cs6IYgnrAzxVCe3b+fXtK42Bha2uLX375BQUFBXj//fcxaNAgQ7bL4rSvf8/mTApFCm3MX0U4dLUQCXfKzXZlsjEpgsWDLL7qtOFxMX6gIoWW5i3aO6msEG2dQ1CAFsNQR44cMWQ7LJ5K/ft+7M2kkDS0gAOgurEV635MASBPC42eHWL2k7iG0iqV4VymPEPswSD2pEN3ZmKQB35PEyM+oxT/nBJo6uaYhZrGFlzKLgfAvsQUfdKoZzF//nyt9qJeunQpSkpocU977evfs3UsODatCM9/f/W+FFGxpBFr9iVb7dDUtYIq1DS2wsXeFkP7upi6OT3yYNs81NW8SkjqW0zcGvNw9nYZWqQM/N0d4O+hvvK2pdIoWPzvf/9DaWkpqqur1d4kEgmOHj2K2tpaQ7edVRQps2wtPsb2YnmGFJ8h71WMG+jO2gsBBR+XXgjycoSMgbK3ZO2sce+Kzmg0DMUwDIKCggzdFouVW16HzJJa2HA5yis3ttGmWF5kgPntJ25IivkKS8mSmRjkgYziWsRnlGDWUOscWlSQyph7c41WmjKroFGwOHXqlNZPrO9d8thMMQT1gJ8bazNl2F4sz1Cq6pvxV9uOhxNYPl+hMDHIE7vOZiM+oxQMw4DDYXdvqSdS8itRUdcMJzsbjPRj71yjPmgULCZOnGjodli0kyxdtd0e24vlGcq5zDLIGCDQ0xHeQsvYZW6knyt62fJQXN2EW8U1CBbpb4dItvmzbSHepEGesLXCVdvtWfdvbwS1Ta24mCXPpGDzmKclFMszBGXKLEuHFztjZ8tTDiVae0l6xUZHUSy+0NMXChYGdu52KVqkDAawPJNCUSwPQJcBw9yL5ekbwzA4k6FImbWcYAFQFVoAyK+oR0Zx26ptC/v76oKChYGxZa9tTUwP9cb2J4ZDJFQdarKz5bKiWJ6+3S6phbi6EQIbLkZbWI9K8eV4OacCdU3WuTuiolcxor8rXOz5Jm6N6VGwMCCZBda/nx7qjXMvP4QfVo3BC22LtgQ2XEwNEZm4ZcanGIIaNcANdraWtY2wn7sD+ve2R4uUQcKdclM3xySUFaIt5LPbUxQsDOivQgnKapvhJLDBSD/LufLkcTmIDOiNtQ8NhJOdDSQNrbjWlhFkTc607ethqUMU1jwUVdvUiktZ8r22rT1lVkGjbKiIiAiN0+eSk5N71CBLcrKtG/tgkIdFlvO24XExIdAdx1LFiL9ViuEsLmOircYWKS61JS5Y2nyFwsQgD3ybkIvTGSVWlUIrlTH4+mwWmqUyeDkL4NebfRWiDUGjYDF37lwDN8OySGUMErMrcDC5EIB8sxRLNTHIQx4sMkqxbqr1LNxMzK5AU6sMImc7BHqyN3GhO2P8e4PP4yK/ogE55fUY4G751aVj04qw+Wi6cgFqcXUTJmw7ZdW1zxQ0ChbR0dGGbofGvvzyS3zwwQcQi8UYNmwYPv/8c4waNarL43/++We88cYbyMnJQWBgIN5//33MnDnTYO3r+GYDgA/+uAUnOxuLfLMprqqvFVShsq4Zrg7WMRF4L2XW3WKvuB0ENnhggCvOZ5Yj/lYJBrgPMHWTDCo2rQhr9iV3WfvMGpM42mPV2MiPP/6I9evXIzo6GsnJyRg2bBimTZvWZdHCCxcuYMmSJXj66adx9epVzJ07F3PnzkVaWppB2qd4s3Usi1Fa02Sxhfa8hb0QLHICwwBnrGg7TsXvaqlDUArWMm9Btc/U0zpYSKVSfPjhhxg1ahREIhHc3NxUbob08ccfY9WqVVi5ciVCQkKwY8cO2NvbY/fu3Z0e/+mnn2L69Ol46aWXMHjwYGzZsgXDhw/HF198ofe2WfObzVq+UBSKJA3IKK4FlwPl/g+WamKQPBMoIascjS1SE7fGcLSpfWattA4Wmzdvxscff4xFixZBIpFg/fr1mD9/PrhcLt58800DNFGuubkZSUlJiIqKUt7H5XIRFRWFhISETh+TkJCgcjwATJs2rcvjAaCpqem+SrqasOY3myJYnMkog8wCg2FHZ9sW4g3t62Lx+fdBXo4QOduhsUWGyzmW995VoNpn6mkdLPbv349du3Zhw4YNsLGxwZIlS/DVV19h06ZNuHjxoiHaCAAoKyuDVCqFl5dqGpuXlxfEYnGnjxGLxVodDwBbt26FUChU3nx9fTVqnzW/2Ub4ucKez0NZbRPSizTf94St4q1kCAoAOJx7q5ctufQH1T5TT+tgIRaLERYWBgBwdHSERCLfq/dvf/sbYmJi9Ns6E9i4cSMkEonylp+fr9HjrPnNJrDhYWyAdWzHKZUxOKdcX2HZQ1AKEwdZ/jCjovZZV6y19ll7WgeLvn37oqhIPlEbEBCA48ePAwAuX74MgUCg39a14+7uDh6Ph+LiYpX7i4uLIRJ1vnpYJBJpdTwACAQCODs7q9w0Ye2F9pRfKBZ89QkAfxVUQdLQAic7Gwxj+a54mlJs6nS7pBaFVQ2mbo5BtK991pHiM21ttc860jpYzJs3D3FxcQCA559/Hm+88QYCAwOxbNkyPPXUU3pvoAKfz8eIESOUrw0AMpkMcXFxiIyM7PQxkZGRKscDwIkTJ7o8vie6K7RnDW82xcY/SXmVqG603O04FYUDxw90h42VlKwW9rJFhK8LgHspw5ZIXob8/s+nSGhn9WmzgIbrLNp77733lP9etGgR+vXrh4SEBAQGBmL27Nl6bVxH69evx/LlyzFy5EiMGjUKn3zyCerq6rBy5UoAwLJly9CnTx9s3boVAPB///d/mDhxIj766CPMmjULBw4cwJUrV7Bz506DtE9RaK/jOguR0M7iF/X0620Pf3cHZJXV4UJmmcX+rtaSMtvRxCAPXMmtRPytUiwZ1c/UzTGIhDvlaJEyEDkL8O9F4SipaYKnk3w0wFIv8rShdbDoKDIy0iBX6p1ZtGgRSktLsWnTJojFYoSHhyM2NlY5iZ2Xlwcu997V3tixY/H999/j9ddfx6uvvorAwEAcPnwYoaGhBmvj9FBvTA0RITG7AiU1jVb1ZnswyANZZXWIzyi1yGAhaWhBSn4VACsMFoM88NGJDJzPLEOLVGaRGwHF3ZQPWU8Z7IXIAOuYj9KGTsHi9u3bOHXqFEpKSiCTyVR+tmnTJr00rCtr167F2rVrO/3Z6dOn77tvwYIFWLBggUHb1JGi0J61mTTIA3sv5OD0LcvcjvNCZhmkMgYBHg7o42IZu+JpKtRHCDcHPirqmnE1r8ri5t4YhsGpm/JeoyVsJ2AIWgeLXbt2Yc2aNXB3d4dIJFL5QuBwOAYPFsR8jfHvDYENF0WSRtwuqUWQl5Opm6RX1joEBQBcLgcPBrrjcMpdxGeUWFywuFVcg8KqBghsuMrMPqJK677k22+/jXfeeQdisRgpKSm4evWq8kYVZ62bnS0Po/0tcztOlV3xAq0vWACWnUKr2KRs3EB39OJb1t4k+qJ1sKisrDT6sA5hD0st/ZFVVofCqgbweVyM9resq2pNTWgLkmmF1dh3MRcJd8otpnzNqbaNjibTEFSXtA4WCxYsUK6tIKQjRTn2xOwK1DdbznacipTRBwa4wp7f47wQVrqSUwHbtkSN1w+nYcmuixj//knWF8isrGtGcl4lAJqv6I7W7/qBAwfijTfewMWLFxEWFgZbW1uVn//zn//UW+MI+/i7O6Cvay8UVDYg4U65xewypixJbqVDUJZcvjs+oxQyBggWOVld4oI2tA4WO3fuhKOjI+Lj4xEfH6/yMw6HQ8HCyilqCe2/lIf4jFKLCBZNrVJcbNti0xont9VVVOZAXlF5aoiIlSniir22qVfRPa2DRXZ2tiHaQSxI+2BhCa7kVKKhRQpPJwGCRZaV4aUJbSoqsy1lvFUqQ/wtebCYMpiCRXcsb2UNMbmxA91hy+Mgt7weOWV1pm5OjymGoCYEeljc2hFNWHJF5aTcSlQ3tsLV3hbhvtazh7wutO5ZrF+/vtP7ORwO7OzsMHDgQMyZM8fgGyER8+UosMHI/m5IyCrH6VslWMHy7Tjj222hao0suaLyybZexaRBnqwcQjMmrYOFYj2FVCrFoEGDAAAZGRng8XgIDg7Gf/7zH2zYsAHnzp1DSEjnVRyJ5Zs4yAMJWeWIzyjFinHsDRYl1Y24Ka4Bh3MvddTaKCoqiyWNnc5bcCCvf8bGhXonb1DKrKa0HoaaM2cOoqKicPfuXSQlJSEpKQkFBQWYOnUqlixZgsLCQjz44INYt26dIdpLWEKx3oLt23Geadu7IqyPvNyFNequorICGysq51fU43ZJLXhcjrJqMuma1sHigw8+wJYtW1T2eRAKhXjzzTexbds22NvbY9OmTUhKStJrQwm7BIuc4OUsYP12nNaeMqugqKgs6rBBEI/LwX+WsjNt9mRbFtTI/q4Q2tuqOZpoHSwkEglKSkruu7+0tFS5X7WLiwuam5t73jrCWpawHadMxuBcZluJDytMme1oeqg3zr38EH5YNQbbHhsKWx4HUhmDfr3tTd00nVDKrHZ0GoZ66qmncOjQIRQUFKCgoACHDh3C008/jblz5wIAEhMTERQUpO+2EpaZGCT/EJ5mYQqtVMbgh8Q8VNQ1w86Wi6F9haZukllQVFReONIXU4Lla2h+T+16T3tzVdfUiot3ygFQyqymtA4W//3vfzFlyhQsXrwY/fv3R//+/bF48WJMmTIFO3bsAAAEBwfjq6++0ntjCbuMH+gOLgfILKlFQWW9qZujsdi0Iox//yReO5wGAGhskWHyh6dZX9ZC32aEybcnPpZaBIZhV42o85llaJbK4OvWCwEejqZuDitoHSwcHR2xa9culJeXK6vNlpeXY+fOnXBwcAAAhIeHIzw8XN9tJSwjtLdFRD957rqiYqu5U5S16LgITVHWggLGPQ8Fe4Jvw0VWWR0yimtN3RytnFIsxAv2ssq1M7rQeVGeo6Mjhg4diqFDh8LRkSIz6dwkZRXa++e5zI26shaAvKyFpVRa7SknO1vlxH9MKnuCKMMwypLkNF+hOY3WWcyfPx979+6Fs7Mz5s+f3+2xBw8e1EvDiGW4tx1nOZpbZeDbmG/RAEsua2Eos4aK8OeNYvyeWoT1U9kxT3n9bjVKappgz+dZbbl5XWgULIRCobKrJhTSRB/RXPvtOJPzKjHG33y/ZC25rIWhTBnsBVseB7dLanG7uAaBLNgdUZEyO36gOwQ2tNGRpjQKFnv27On034Soo7odZ6lZBwtLLmthKM52tpgQ6IGTN0vwe5qYFcGCUmZ1o/WYQENDA+rr72W25Obm4pNPPqENkUiXlNtxmvl6C0VZi65wAHiztKyFIc0IvZcVZe5Ka5rwV0EVACrxoS2d1ll8++23AICqqiqMGjUKH330EebMmYPt27frvYGE/R4M9ACHA6QXVaOk2nyHcNqXtehIkS/DxrIWhjY1xAs2XA5uimuQVWreWVGnb5WAYeTlW7ycqYeoDa2DRXJyMiZMmAAA+OWXXyASiZCbm4tvv/0Wn332md4bSNivt6MAYX3kc13mvsdFPzeHTu8XCe1YvRucIbnY8zF2oLwi7+9p5r1AT5EyS70K7Wlddba+vh5OTvJxyePHj2P+/PngcrkYM2YMcnNz9d5AYhkmBnngrwIJ4jNKsWCkr6mb06VfkwsAADNCvbAscgBKahrh6SQfeqIeRddmhYlwJqMUx1KL8NzkgaZuTqeaW2XK9T5TKFhoTeuexcCBA3H48GHk5+fjjz/+wMMPPwwAKCkpUSkuqG8VFRVYunQpnJ2d4eLigqeffhq1td13eSdNmgQOh6NyW716tcHaSLqmqBN19naZ2a5TaJHKcPhqIQBgwUhfRAb0xpzwPogM6E2BQg3FlqrX71Yjt9w8N7y6nFOB2qZWuLfr6RLNaR0sNm3ahBdffBF+fn4YPXo0IiMjAch7GREREXpvoMLSpUtx/fp1nDhxAr/99hvOnDmDZ599Vu3jVq1ahaKiIuVt27ZtBmsj6Vq4rwucBDxIGlrwxanbSLhTbnZBI/5WKcrrmuHuKLD6KrPacnPgI7It081ch6IUKbOTB3mAS8Ffa1oPQz322GMYP348ioqKMGzYMOX9U6ZMwbx58/TaOIUbN24gNjYWly9fxsiRIwEAn3/+OWbOnIkPP/wQPj4+XT7W3t4eIpHIIO0imvvzRjFa2oLDv0/cBnAb3kI7RM8OMZt5AMUQ1NxwH9jwzHfxoLmaESbCucwy/J5ahNUTA0zdnPsoggUVDtSNTp8IkUiEiIgIcLn3Hj5q1CgEBwfrrWHtJSQkwMXFRRkoACAqKgpcLheXLl3q9rH79++Hu7s7QkNDsXHjRpW03840NTWhurpa5UZ6RlFvqbFFpnK/OdVbqqxrxp83igEAj47oa+LWsNPDISJwOcC1AonZFY7MKq1FdlkdbHkcjKdeo05YcfkkFovh6al6NWBjYwM3NzeIxV13eR9//HHs27cPp06dwsaNG/Hdd9/hiSee6Pa1tm7dCqFQqLz5+prvZCwbsKXe0tG/7qJFymCIjzMGextu7s2SeTgJlGtQYs1sKErRqxg9oDccBVoPqBCYOFi88sor901Ad7zdvHlT5+d/9tlnMW3aNISFhWHp0qX49ttvcejQIdy5c6fLx2zcuBESiUR5y8/P1/n1iXb1lkzp1yT5ENSjw6lX0RMzw+RDiuZWWFCRMkurtnVn0hC7YcMGrFixottj/P39IRKJ7tudr7W1FRUVFVrNR4wePRoAkJmZiYCAzsdUBQIBBAKBxs9JuseGeku3i2twrUACGy4Hc8K7nv8i6k0fIkL0keu4mleFu1UN8HHpZeomoaaxBZey5BcjFCx0Z9Jg4eHhAQ8P9eOHkZGRqKqqQlJSEkaMGAEAOHnyJGQymTIAaCIlJQUA4O1tHhOq1oAN9ZZ+aZvYnhzsid6OdKHQE57OdnigvxsScyoQmybGU+MHmLpJOHe7DK0yBv4eDvBz73zRJVGPFXMWgwcPxvTp07Fq1SokJibi/PnzWLt2LRYvXqzMhCosLERwcDASExMBAHfu3MGWLVuQlJSEnJwcHDlyBMuWLcODDz6IoUOHmvLXsSqKektdJSqaut6SVMYo11bQEJR+KHbQ+90MEheAdoUDB1GvoidYESwAeVZTcHAwpkyZgpkzZ2L8+PHYuXOn8uctLS24deuWMtuJz+fjzz//xMMPP4zg4GBs2LABjz76KI4ePWqqX8Eqta+31FnAYGDaektnb5eiuLoJrva2NEShJ9PbCgteya1EsYlrgclkDE4r5isoZbZHWJMW4Obmhu+//77Ln/v5+ansA+zr64v4+HhjNI2oMT3UG9ufGI7NR9Pvm+weG9DbpOssfk2W9yrmhPcx642Z2MRb2AvD+7kgOa8Kf1wXY1mkn9HbIJUxSMyuwOWcCpTVNsORz8MDflQtuCdYEywIu00P9cbUEBESsytQUtOIqvoWRB+5jss5FRBLGiHqpjS4oUgaWnD8ujzFk4ag9GtmmDeS86pwLLXI6MEiNq3ovguTVoZB3I1is1kAykZ0KUWMhsflKOstLR/rh1F+bmiRMth9Ptsk7Yn5qwhNrTIEeTkitA+trdCnGW0ptInZFSitaTLa6yoWgHbswTa2yMxmAShbUbAgJrN6kj8A4PtLeZA0tBj99RXlPR4b0Ve5bTDRjz4uvTDM1wUyBvjjunEW6HW3AFTBHBaAshUFC2Iyk4I8EeTliNqmVuy/ZNzy9tlldUjKrQSXA8wN72PU17YWM0ONmxXFlgWgbEXBgpgMl8vB3x+UL47ccz4HjS1So722YsX2g0Ee8KQd0wxiRtv8wMWsCpTXGn4oig0LQNmMggUxqdnDfOAttENpTRMOta13MDSZjFG+1mNUNNBg+vW2R2gfZ0hlDE6kFxv89diwAJTNKFgQk+LbcPF02yrfXWeyjDKefDGrHIVVDXC2s0HUYC+Dv541U/QujhmhsKBiAWhXTL0AlO0oWBCTWzyqH5ztbJBVVocT6Yb/UvmlbQjqb8N8YGfLM/jrWTNFYcELmWWoqm826Gu1XwDakSJ9wZQLQNmOggUxOUeBjTIXf3t8lsriSn2rbWpV7uRGaysMb4C7AwZ7O6NVxuC4EYaiugr+IqEdtj8xnNZZ9AAtyiNmYcU4P+w8m4Vr+VW4lF2BMW1bdOrb76lFaGiRwt/dAcP7uRjkNYiqmaEi3Ciqxu+pRVg40nD7wzS1SvHmkesAgKfG+WFqiAglNY3wdJIPPVGPomeoZ0HMgrujAAvaJpt3xHe930hPKdZWPEprK4xGsUDvzO1SHEjMM9j+6zvjs5BTXg9PJwHWTQ1SLgCNDOhNgUIPKFgQs7Fqgj+4HOD0rVLcKNL/drb5FfW4mFUBDgeYF0FrK4wls6QGNlwOpDLglYOpWLLrIsa/f1Kvq6nzK+rxxalMAMBrswbDyc5Wb89N5ChYELPh5+6gzJ7ZeSZL789/sK1o4LgAd7PYlMcaKMpvtHboSeh7//W3fktHU6sMkf698cgw2sDKEChYELOyeqJ8kd6Ra3dRUFmvt+dlGKbdEBT1KozBWPuvn7xZjBPpxbDhcvDWnCE0vGggFCyIWQnrK8S4gb0hlTH4+pz+CgxezqlEXkU9HPg8TBui+Va8RHfGKL/R2CJFdNuk9tPjByDQy0nn5yLdo2BBzI6iBMiBxHxU1uknN19R3mPWUG/Y8ykJ0BiMUX5jR/wd5Fc0QORsh+enBOr8PEQ9ChbE7EwIdEeItzMaWqT47mLPCgxKZQzib5XgcIp8vmIeFQ00GkOX38grr8d/Tssz517/22A4CugiwJAoWBCzw+Fw8PeJ8vLley/koKFZtwKDsWlFGP/+SSzfcxlNrTIAwLqfrtGeBkaibv91QL7quo+r9skGDMPgzaPX0dwqw/iB7pgVRovtDI2CBTFLs8K80de1FyrqmvFzUr7Wj+9qE5ziav1m4ZCuqdt/HZD3/Bb/NwFZpbVaPfefN0pw8mYJbHkcvPkITWobAwULYpZseFysmiDvXew6m4VWqUzjxxorC4eop9h/veO2ud5CO7w7LxT+Hg64K2nEgh0JuH5XotFzNjTfW6n9zAR/DPR01Hu7yf1okI+YrYUjffFp3G3kVzTgWJpY4/z52LQijbNwIgMMU1aE3NNx//X25TemDRFh2e5EXL9bjcU7L2LPigcw0q/7qrDbT2eisKoBPkI7PP/QQCP9FoR6FsRs9eLzsLytwOCO05lIuFOG/6UUdlouQtLQgh8v52HxzgQ89/1VjZ6fNsExnvb7r7cvv9HbUYAfnh2DB/xcUdPYiie+voT4jNIunye7rA474uULNjfNDqHMNiPiMIYs8WkBqqurIRQKIZFI4OzsbOrmWJ3KumaMfjcOzR2GobyFdnh1ZjBseTwcvlqIk7dK0Nyq+VAVAPywagz1LMxEQ7MUq/clIT6jFLY8Dj5dHKEsb67AMAyW77mMMxmleDDIA9+sfIDmKnSky/cahWVi1i5ll98XKAD5MNLzP6So3Bfk5Yi5EX0wK8wbi3dehFjS2Om8BQfyktW0CY756MXnYdeykVj3Uwpi/irC2u+T8d78oXh0RF/l8FVOWT3OZJSCz+NiM01qGx1rgsU777yDmJgYpKSkgM/no6qqSu1jGIZBdHQ0du3ahaqqKowbNw7bt29HYCAt3mEDxUR1d7gc+crdeRF9MdjbSfkFEj07BGv2JYMDqAQM2gTHfPFtuPhscQScBDY4cDkf//r1L2yJSUdNY6vKcVMGe2KAu4OJWmm9WDNn0dzcjAULFmDNmjUaP2bbtm347LPPsGPHDly6dAkODg6YNm0aGhtprJoN1JWLAAAZAzwU7IUQH2eVK82usnBoExzzxuNysHV+GKaGyLe77RgoACA2TUypzybAmp7F5s2bAQB79+7V6HiGYfDJJ5/g9ddfx5w5cwAA3377Lby8vHD48GEsXrzYUE0letLTchHdZeEQ8yVjgNTC7tNoNx9Nx9QQEf0tjYg1wUJb2dnZEIvFiIqKUt4nFAoxevRoJCQkdBksmpqa0NTUpPx/dbX+91UgmtFHuQhFFg5hj8TsCogp9dnssGYYSltisXyfZS8vL5X7vby8lD/rzNatWyEUCpU3X1/DbQNJuqeuXAQH8qwomqi2LMYoQEi0Z9Jg8corr4DD4XR7u3nzplHbtHHjRkgkEuUtP1/7UhNEP7orF0ET1ZbL0AUIiW5MOgy1YcMGrFixottj/P39dXpukUi+Z0FxcTG8ve9NZhYXFyM8PLzLxwkEAggEAp1ek+ifYqJ689F0lclukdAO0bNDaKLaAil6lJT6bF5MGiw8PDzg4eFhkOceMGAARCIR4uLilMGhuroaly5d0iqjipgeTVRbF0WPklKfzQtr5izy8vKQkpKCvLw8SKVSpKSkICUlBbW196pVBgcH49ChQwDkZa5feOEFvP322zhy5AhSU1OxbNky+Pj4YO7cuSb6LYiuuioXQSwTpT6bH9ZkQ23atAnffPON8v8REREAgFOnTmHSpEkAgFu3bkEiuZdy969//Qt1dXV49tlnUVVVhfHjxyM2NhZ2djTWSYi5ox6leaHaUGpIJBK4uLggPz+fakMRQixCdXU1fH19UVVVBaFQqNFjWNOzMJWamhoAoBRaQojFqamp0ThYUM9CDZlMhrt378LJyUmrwmWKyE09ks7R+ekenZ+u0bnpnibnh2EY1NTUwMfHB1yuZlPX1LNQg8vlom/fvjo/3tnZmd7Q3aDz0z06P12jc9M9dedH0x6FAmuyoQghhJgOBQtCCCFqUbAwEIFAgOjoaFoN3gU6P92j89M1OjfdM9T5oQluQgghalHPghBCiFoULAghhKhFwYIQQohaFCwIIYSoRcGiB7788kv4+fnBzs4Oo0ePRmJiYrfH//zzzwgODoadnR3CwsJw7NgxI7XUNLQ5P7t27cKECRPg6uoKV1dXREVFqT2fbKbte0fhwIED4HA4Fl85WdvzU1VVheeeew7e3t4QCAQICgqy6M+Xtufnk08+waBBg9CrVy/4+vpi3bp1aGzUcqdBhujkwIEDDJ/PZ3bv3s1cv36dWbVqFePi4sIUFxd3evz58+cZHo/HbNu2jUlPT2def/11xtbWlklNTTVyy41D2/Pz+OOPM19++SVz9epV5saNG8yKFSsYoVDIFBQUGLnlhqftuVHIzs5m+vTpw0yYMIGZM2eOcRprAtqen6amJmbkyJHMzJkzmXPnzjHZ2dnM6dOnmZSUFCO33Di0PT/79+9nBAIBs3//fiY7O5v5448/GG9vb2bdunVavS4FCx2NGjWKee6555T/l0qljI+PD7N169ZOj1+4cCEza9YslftGjx7N/P3vfzdoO01F2/PTUWtrK+Pk5MR88803hmqiyehyblpbW5mxY8cyX331FbN8+XKLDhbanp/t27cz/v7+THNzs7GaaFLanp/nnnuOeeihh1TuW79+PTNu3DitXpeGoXTQ3NyMpKQkREVFKe/jcrmIiopCQkJCp49JSEhQOR4Apk2b1uXxbKbL+emovr4eLS0tcHOzrK0zdT03b731Fjw9PfH0008bo5kmo8v5OXLkCCIjI/Hcc8/By8sLoaGhePfddyGVSo3VbKPR5fyMHTsWSUlJyqGqrKwsHDt2DDNnztTqtamQoA7KysoglUrh5eWlcr+Xlxdu3rzZ6WPEYnGnx4vFYoO101R0OT8dvfzyy/Dx8bkvwLKdLufm3Llz+Prrr5GSkmKEFpqWLucnKysLJ0+exNKlS3Hs2DFkZmbiH//4B1paWhAdHW2MZhuNLufn8ccfR1lZGcaPHw+GYdDa2orVq1fj1Vdf1eq1qWdBzM57772HAwcO4NChQ1a/q2FNTQ2efPJJ7Nq1C+7u7qZujlmSyWTw9PTEzp07MWLECCxatAivvfYaduzYYeqmmYXTp0/j3XffxX/+8x8kJyfj4MGDiImJwZYtW7R6HupZ6MDd3R08Hg/FxcUq9xcXF0MkEnX6GJFIpNXxbKbL+VH48MMP8d577+HPP//E0KFDDdlMk9D23Ny5cwc5OTmYPXu28j6ZTAYAsLGxwa1btxAQEGDYRhuRLu8db29v2NragsfjKe8bPHgwxGIxmpubwefzDdpmY9Ll/Lzxxht48skn8cwzzwAAwsLClNtNv/baaxrvZ0E9Cx3w+XyMGDECcXFxyvtkMhni4uIQGRnZ6WMiIyNVjgeAEydOdHk8m+lyfgBg27Zt2LJlC2JjYzFy5EhjNNXotD03wcHBSE1NRUpKivL2yCOPYPLkyUhJSbG4HRx1ee+MGzcOmZmZyiAKABkZGfD29raoQAHodn7q6+vvCwiKwMpoUxpQ25l4InfgwAFGIBAwe/fuZdLT05lnn32WcXFxYcRiMcMwDPPkk08yr7zyivL48+fPMzY2NsyHH37I3Lhxg4mOjrb41Fltzs97773H8Pl85pdffmGKioqUt5qaGlP9Cgaj7bnpyNKzobQ9P3l5eYyTkxOzdu1a5tatW8xvv/3GeHp6Mm+//bapfgWD0vb8REdHM05OTswPP/zAZGVlMcePH2cCAgKYhQsXavW6FCx64PPPP2f69evH8Pl8ZtSoUczFixeVP5s4cSKzfPlyleN/+uknJigoiOHz+cyQIUOYmJgYI7fYuLQ5P/3792cA3HeLjo42fsONQNv3TnuWHiwYRvvzc+HCBWb06NGMQCBg/P39mXfeeYdpbW01cquNR5vz09LSwrz55ptMQEAAY2dnx/j6+jL/+Mc/mMrKSq1ek0qUE0IIUYvmLAghhKhFwYIQQohaFCwIIYSoRcGCEEKIWhQsCCGEqEXBghBCiFoULAghhKhFwYIQHZ0+fRocDgdVVVVGf20OhwMOhwMXFxeNjle01Rp22SOGQcGCEA1MmjQJL7zwgsp9Y8eORVFREYRCoUnatGfPHmRkZGh0rKKtCxcuNHCriKWiYEGIjvh8PkQiETgcjkle38XFBZ6enhodq2hrr169DNwqYqkoWBCixooVKxAfH49PP/1UOZSTk5Nz3zDU3r174eLigt9++w2DBg2Cvb09HnvsMdTX1+Obb76Bn58fXF1d8c9//lNlF7empia8+OKL6NOnDxwcHDB69GicPn1a63Zeu3YNkydPhpOTE5ydnTFixAhcuXJFT2eBWDvaz4IQNT799FNkZGQgNDQUb731FgDAw8MDOTk59x1bX1+Pzz77DAcOHEBNTQ3mz5+PefPmwcXFBceOHUNWVhYeffRRjBs3DosWLQIArF27Funp6Thw4AB8fHxw6NAhTJ8+HampqQgMDNS4nUuXLkVERAS2b98OHo+HlJQU2Nra6uUcEELBghA1hEIh+Hw+7O3t1W7e1NLSgu3btys3JHrsscfw3Xffobi4GI6OjggJCcHkyZNx6tQpLFq0CHl5edizZw/y8vLg4+MDAHjxxRcRGxuLPXv24N1339W4nXl5eXjppZcQHBwMAFoFGkLUoWBBiB7Z29ur7Fzn5eUFPz8/ODo6qtxXUlICAEhNTYVUKkVQUJDK8zQ1NaF3795avfb69evxzDPP4LvvvkNUVBQWLFhgUbvoEdOiYEGIHnUc9uFwOJ3ep9jVrba2FjweD0lJSSrbggJQCTCaePPNN/H4448jJiYGv//+O6Kjo3HgwAHMmzdPh9+EEFUULAjRAJ/PV5mU1peIiAhIpVKUlJRgwoQJPX6+oKAgBAUFYd26dViyZAn27NlDwYLoBWVDEaIBPz8/XLp0CTk5OSgrK1PZ77kngoKCsHTpUixbtgwHDx5EdnY2EhMTsXXrVsTExGj8PA0NDVi7di1Onz6N3NxcnD9/HpcvX8bgwYP10k5CKFgQooEXX3wRPB4PISEh8PDwQF5ent6ee8+ePVi2bBk2bNiAQYMGYe7cubh8+TL69eun8XPweDyUl5dj2bJlCAoKwsKFCzFjxgxs3rxZb+0k1o22VSWEhTgcDg4dOqR16Y4VK1agqqoKhw8fNki7iOWingUhLLVkyRL07dtXo2PPnj0LR0dH7N+/38CtIpaKehaEsFBmZiYA+fDTgAED1B7f0NCAwsJCAPIsK3XrRQjpiIIFIYQQtWgYihBCiFoULAghhKhFwYIQQohaFCwIIYSoRcGCEEKIWhQsCCGEqEXBghBCiFoULAghhKhFwYIQQoha/w8BTrjLD3s3zAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 400x200 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "with h5tbx.File(signal_filename, 'r') as h5:\n",
    "    plt.figure(figsize=(4,2))\n",
    "    h5['signal'][:].plot(marker='o')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6369b961-15b0-4b0c-a483-3bffca2b7c20",
   "metadata": {},
   "source": [
    "## Create a group\n",
    "Groups don't really differ from the implementation in `h5py` except you may tell to overwrite an existing grop or pass the attributes during creation:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0675041d-970f-4d86-bb01-477513a290f4",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "with h5tbx.File(signal_filename, 'r+') as h5:\n",
    "    h5.create_group('mygroup',\n",
    "                    overwrite=True,\n",
    "                    attrs={'long_name': 'my special group'})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1627e47a-37d1-45b2-8adc-d04d038b1574",
   "metadata": {},
   "source": [
    "## Natural Naming\n",
    "Until here we used the conventional way of addressing variables and groups in a dictionary-like style. `h5RDMtoolbox` allows to use \"natural naming\" which means that we can address those objects as if they were attributes. Make sure `h5tbx.config.natural_naming` is set to `True` (the default)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f96c2dce-fd5e-43e1-98ef-ec6c6d98736f",
   "metadata": {},
   "outputs": [],
   "source": [
    "from h5rdmtoolbox import config"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d1b678a5-403f-4055-9d1b-45153dcb7b58",
   "metadata": {},
   "source": [
    "Let's first disable `natural_naming`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "224c1b74-bd60-4c2e-b498-1f3dab56aa7b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'File' object has no attribute 'signal'\n"
     ]
    }
   ],
   "source": [
    "config.natural_naming = False\n",
    "with h5tbx.File(signal_filename, 'r') as h5:\n",
    "    try:\n",
    "        ds = h5.signal[:]\n",
    "    except AttributeError as e:\n",
    "        print(e)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3514ae51-07ca-4e97-a37f-bbd3a8c29f3d",
   "metadata": {},
   "source": [
    "Enable it:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0a088543-0338-4022-a691-4108a95b1951",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "config.natural_naming = True\n",
    "with h5tbx.File(signal_filename, 'r') as h5:\n",
    "    ds = h5.signal[:]\n",
    "    grp = h5.mygroup"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fdcc735d-8422-4710-a794-984a59580ad6",
   "metadata": {},
   "source": [
    "## Inspect file content\n",
    "Often it is necessary to recall the content of a file. Calling `dump()` on a group represents the content (dataset, groups and attributes) as a pretty nd interactive (!) html representation. This is adopted from the `xarray` package. All credits for this idea go there. The representation here avoids showing data, though. Outside an IPython environment call `sdump()` to get a string representation of the file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "db6775f0-f3f0-40ac-887d-d00068188138",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<head><style>/*\r\n",
       "CSS inspired by xarray: https://github.com/pydata/xarray\r\n",
       "*/\r\n",
       ".h5tb-header > div,\r\n",
       ".h5tb-header > ul {\r\n",
       "    display: inline;\r\n",
       "    margin-top: 0;\r\n",
       "    margin-bottom: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dataarray-cls,\r\n",
       ".h5tb-dataarray-name {\r\n",
       "    margin-left: 2px;\r\n",
       "    margin-right: 10px;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dataarray-name {\r\n",
       "    color: #000;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections {\r\n",
       "    list-style: none;\r\n",
       "    padding: 3px;\r\n",
       "    margin: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections input {\r\n",
       "    display: none;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections label {\r\n",
       "    display: inline;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input + label > span {\r\n",
       "    display: inline;\r\n",
       "    margin-left: 4px;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input:checked + label > span {\r\n",
       "    display: none;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections input:enabled + label {\r\n",
       "    cursor: pointer;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections input:not(.h5tb-values-in) ~ ul {\r\n",
       "    display: none;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections input:not(.h5tb-values-in):checked ~ ul {\r\n",
       "    display: block;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input + label {\r\n",
       "    width: 140px;\r\n",
       "    color: #555;\r\n",
       "    font-weight: 500;\r\n",
       "    padding: 4px 0 2px 0;\r\n",
       "}\r\n",
       "\r\n",
       "\r\n",
       ".h5grp-sections > li > input + label:before {\r\n",
       "    display: inline-block;\r\n",
       "    content: '+';\r\n",
       "    font-size: 11px;\r\n",
       "    width: 15px;\r\n",
       "    text-align: center;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input:disabled + label:before {\r\n",
       "    color: #777;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input:checked + label:before {\r\n",
       "    content: '-';\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list {\r\n",
       "    display: inline-block !important;\r\n",
       "    list-style: none;\r\n",
       "    padding: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list li {\r\n",
       "    display: inline-block;\r\n",
       "    padding: 0;\r\n",
       "    margin: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list:before {\r\n",
       "    content: '(';\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list:after {\r\n",
       "    content: ')';\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list li:not(:last-child):after {\r\n",
       "    content: ',';\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-has-index {\r\n",
       "    text-decoration: underline;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list {\r\n",
       "    list-style: none;\r\n",
       "    padding: 0;\r\n",
       "    margin: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list > li {\r\n",
       "    background-color: #fcfcfc;\r\n",
       "    overflow: hidden;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list > li:nth-child(odd) {\r\n",
       "    background-color: #efefef;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list li:hover {\r\n",
       "    background-color: rgba(3, 169, 244, .2);\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list li > span {\r\n",
       "    display: inline-block;\r\n",
       "}\r\n",
       "\r\n",
       "input.h5tb-varname-in + label {\r\n",
       "    width: 140px;\r\n",
       "    padding-left: 0;\r\n",
       "    font-weight: bold;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dataset {\r\n",
       "    width: 100px;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-attributevalue {\r\n",
       "    width: 100px;\r\n",
       "    text-align: left;\r\n",
       "    color: #888;\r\n",
       "    white-space: nowrap;\r\n",
       "    font-size: 12px;\r\n",
       "}\r\n",
       "\r\n",
       "input.h5tb-varname-in + label:before {\r\n",
       "    content: ' ';\r\n",
       "    display: inline-block;\r\n",
       "    font-size: 11px;\r\n",
       "    width: 15px;\r\n",
       "    padding-left: 2px;\r\n",
       "    padding-right: 2px;\r\n",
       "    text-align: center;\r\n",
       "    color: #aaa;\r\n",
       "    text-decoration: none !important;\r\n",
       "}\r\n",
       "\r\n",
       "input.h5tb-varname-in:enabled + label:hover:before {\r\n",
       "    color: #000;\r\n",
       "}\r\n",
       "\r\n",
       "input.h5tb-varname-in:checked + label:before {\r\n",
       "    color: #ccc;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dims {\r\n",
       "    width: 280px;\r\n",
       "    white-space: nowrap;\r\n",
       "}\r\n",
       "\r\n",
       "\r\n",
       ".h5tb-unit {\r\n",
       "    width: 96px;\r\n",
       "    white-space: nowrap;\r\n",
       "    padding-right: 2px;\r\n",
       "    text-align: right;\r\n",
       "    color: #555;\r\n",
       "    font-style: italic;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-attr-list {\r\n",
       "    list-style: none;\r\n",
       "    background-color: #fff;\r\n",
       "    padding-bottom: 6px;\r\n",
       "    color: #555;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-attr-list li,\r\n",
       ".h5tb-attr-list li:hover {\r\n",
       "    background-color: #fff;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-highlight {\r\n",
       "    background-color: rgba(3, 169, 244, .2);\r\n",
       "    cursor: pointer;\r\n",
       "}</style></head>\n",
       "<div class='h5tb-warp'>\n",
       "\n",
       "              <ul style=\"list-style-type: none;\" class=\"h5grp-sections\">\n",
       "                    <li>\n",
       "                        <input id=\"group-ds--6041015700\" type=\"checkbox\" checked>\n",
       "                        <label style=\"font-weight: bold\" for=\"group-ds--6041015700\">\n",
       "                        /<span>(3)</span></label>\n",
       "                  \n",
       "\n",
       "                    <ul class=\"h5tb-attr-list\"><li style=\"list-style-type: none; font-style: italic\">__h5rdmtoolbox_version__ : 0.3.0a3</li>\n",
       "                    </ul>\n",
       "\n",
       "                <ul id=\"ds-1-/signal-6042046500\" class=\"h5tb-var-list\">\n",
       "                    <input id=\"ds-2-/signal-6042049000\" class=\"h5tb-varname-in\" type=\"checkbox\">\n",
       "                    <label class='h5tb-varname' for=\"ds-2-/signal-6042049000\">signal</label>\n",
       "                    <span class=\"h5tb-dims\">(time: 21) [float64]</span>\n",
       "                <ul class=\"h5tb-attr-list\"><li style=\"list-style-type: none; font-style: italic\">units : V</li>\n",
       "                </ul>\n",
       "                </ul>\n",
       "\n",
       "                <ul id=\"ds-1-/time-6042688900\" class=\"h5tb-var-list\">\n",
       "                    <input id=\"ds-2-/time-6042693300\" class=\"h5tb-varname-in\" type=\"checkbox\">\n",
       "                    <label class='h5tb-varname' for=\"ds-2-/time-6042693300\">time</label>\n",
       "                    <span class=\"h5tb-dims\">(21,) [float64]</span>\n",
       "                <ul class=\"h5tb-attr-list\"><li style=\"list-style-type: none; font-style: italic\">units : s</li>\n",
       "                </ul>\n",
       "                </ul>\n",
       "\n",
       "              <ul style=\"list-style-type: none;\" class=\"h5grp-sections\">\n",
       "                    <li>\n",
       "                        <input id=\"group-ds-mygroup-6043076200\" type=\"checkbox\" >\n",
       "                        <label style=\"font-weight: bold\" for=\"group-ds-mygroup-6043076200\">\n",
       "                        mygroup<span>(0)</span></label>\n",
       "                  \n",
       "\n",
       "                    <ul class=\"h5tb-attr-list\"><li style=\"list-style-type: none; font-style: italic\">long_name : my special group</li>\n",
       "                    </ul>\n",
       "</li>\n",
       "</ul>\n",
       "</li>\n",
       "</ul>\n",
       "</div>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "with h5tbx.File(signal_filename) as h5:\n",
    "    h5.dump()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "71f5ebb1-2587-41f1-a9eb-1f52b9ba70de",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[3ma: __h5rdmtoolbox_version__\u001b[0m: 0.3.0a3\n",
      "/\u001b[1mmygroup\u001b[0m\n",
      "  \u001b[3ma: long_name\u001b[0m: my special group\n",
      "\u001b[1msignal\u001b[0m: (21,), dtype: float64\n",
      "    \u001b[3ma: units\u001b[0m: V\n",
      "\u001b[1mtime\u001b[0m: (21,), dtype: float64\n",
      "    \u001b[3ma: units\u001b[0m: s\n"
     ]
    }
   ],
   "source": [
    "with h5tbx.File(signal_filename) as h5:\n",
    "    h5.sdump()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.15"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
