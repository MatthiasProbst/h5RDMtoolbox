{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e0dc0783-1b52-48bc-bb8a-e2546ee2a5d7",
   "metadata": {},
   "source": [
    "# File exploration\n",
    "\n",
    "To find data quickly or to collect certain objects the `h5RDMtoolbox` provides helpful methods:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a3bc2c52-85e0-45bd-b2fd-1d7288637583",
   "metadata": {},
   "outputs": [],
   "source": [
    "import h5rdmtoolbox as h5tbx"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5757dc30-e732-48d0-b129-789dce5e94ae",
   "metadata": {},
   "source": [
    "As always, let's build a HDF5 file from scratch:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "65294bdf-db4b-4edd-b069-5d6aa2a6110f",
   "metadata": {},
   "outputs": [],
   "source": [
    "with h5tbx.H5File() as h5:\n",
    "    h5.create_group('grp_1')\n",
    "    h5.create_group('grp_2', long_name='my other group', attrs=dict(one=2, two='a second attr'))\n",
    "    h5.create_dataset('ds_1', shape=(2, 4), units='', long_name='dataset 1')\n",
    "    h5.create_dataset('ds_2', shape=(2, 4), units='', long_name='dataset 2')\n",
    "    h5.create_dataset('gr_1/ds_1', shape=(2, 4), units='', long_name='dataset 2')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fd80e1af-0984-42c0-a4a2-3a9dffa8db01",
   "metadata": {},
   "source": [
    "To get all groups in a current level, call `get_groups()`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "12c8d80a-6b96-480b-81a0-b02cf5a83dc7",
   "metadata": {},
   "outputs": [],
   "source": [
    "with h5tbx.H5File(h5.hdf_filename) as h5:\n",
    "    print(h5.get_groups())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe4610af-7017-4f21-bfc4-bb967a6906cb",
   "metadata": {},
   "source": [
    "To get all groups with a specific pattern, provide a pattern string (uses package `re`):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "efed69b6-2aec-4317-a1f3-77b8823ef451",
   "metadata": {},
   "outputs": [],
   "source": [
    "with h5tbx.H5File(h5.hdf_filename) as h5:\n",
    "    print(h5.get_groups('^grp_[0-9]$'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2b43bf1-4379-46c8-8faa-5d3e986b1b13",
   "metadata": {},
   "source": [
    "Exact same thing work with datasets:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "17e8871b-f01a-4b77-8639-cf25e6806660",
   "metadata": {},
   "outputs": [],
   "source": [
    "with h5tbx.H5File(h5.hdf_filename) as h5:\n",
    "    print(h5.get_datasets('^ds_[0-9]$'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f480d6ed-7be2-4314-bef4-b190067d7f69",
   "metadata": {},
   "source": [
    "You can find datasets or groups by searching for specific attributes:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "16deae82-4144-4a0e-9b8f-760c1c8bd51e",
   "metadata": {},
   "outputs": [],
   "source": [
    "with h5tbx.H5File(h5.hdf_filename) as h5:\n",
    "    print(h5.get_by_attribute('long_name', 'dataset 1', recursive=False))\n",
    "    print(h5.get_by_attribute('long_name', 'dataset 2', recursive=True, h5type='dataset'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b36a8ca8-6883-41f5-af4b-b3750c4c8263",
   "metadata": {},
   "source": [
    "If you specify the object type or directly call the respective method, you only get those objects returned:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "20332c64-d01b-464b-bdc9-11d3c0ceac88",
   "metadata": {},
   "outputs": [],
   "source": [
    "with h5tbx.H5File(h5.hdf_filename) as h5:\n",
    "    print(h5.get_datasets_by_attribute('long_name', 'dataset 2', recursive=True))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "08c204ee-85cf-4db9-a7dd-0aa2c3f85bbc",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
