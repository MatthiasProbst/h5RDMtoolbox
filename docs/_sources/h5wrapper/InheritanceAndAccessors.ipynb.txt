{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "15c7b0e2-0f1c-44f9-8ad4-661ea0f63c02",
   "metadata": {},
   "source": [
    "# New Wrapper Class\n",
    "\n",
    "The main wrapper class around a HDF5 file in this package is `H5File` which uses the wrapper class `H5Group` for `h5py.Group` and `H5Dataset` for wrapping `h5py.Dataset`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "56805966-cb74-445f-9bf4-a93806899160",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:44.042206Z",
     "iopub.status.busy": "2022-08-12T13:19:44.042206Z",
     "iopub.status.idle": "2022-08-12T13:19:45.818787Z",
     "shell.execute_reply": "2022-08-12T13:19:45.818787Z"
    }
   },
   "outputs": [],
   "source": [
    "import h5rdmtoolbox as h5tbx\n",
    "import h5py"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9141f325-37f5-4857-a831-d28694401785",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:45.818787Z",
     "iopub.status.busy": "2022-08-12T13:19:45.818787Z",
     "iopub.status.idle": "2022-08-12T13:19:45.834841Z",
     "shell.execute_reply": "2022-08-12T13:19:45.834841Z"
    }
   },
   "outputs": [],
   "source": [
    "class MyDataset(h5tbx.wrapper.h5file.H5Dataset):\n",
    "    def __repr__(self):\n",
    "        return f'{self.name}\\n{self.attrs}'\n",
    "    \n",
    "    @property\n",
    "    def is_2d(self):\n",
    "        \"\"\"returns whether dataset is two-dimensional or not\"\"\"\n",
    "        return self.ndim == 2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3af13489-c4e3-46c4-a8df-dcc6bac31d90",
   "metadata": {},
   "source": [
    "Next we create a group class with a special method, hat returns all datasets of that group. Also the `create_dataset` method is overwritten. Take care to return `MyDataset` at the end of the method, otherwise dataset class of the parent class is taken."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b8f2255a-2d41-47bc-9231-f5e8746e22a3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:45.834841Z",
     "iopub.status.busy": "2022-08-12T13:19:45.834841Z",
     "iopub.status.idle": "2022-08-12T13:19:45.850512Z",
     "shell.execute_reply": "2022-08-12T13:19:45.850512Z"
    }
   },
   "outputs": [],
   "source": [
    "class MyGroup(h5tbx.wrapper.h5file.H5Group):\n",
    "    \n",
    "    def get_all_datasets(self):\n",
    "        \"\"\"returns all datasets of this group\"\"\"\n",
    "        return [k for k in self if isinstance(self[k], h5py.Dataset)]\n",
    "    \n",
    "    def create_group(self, *args, **kwargs):\n",
    "        return __class__(super().create_group(*args, **kwargs).id)\n",
    "    \n",
    "    # def create_dataset(self, *args, **kwargs):\n",
    "    #     return __class__(super().create_dataset(*args, **kwargs).id)\n",
    "    \n",
    "    def create_dataset(self, name, user, *args, **kwargs):\n",
    "        ds = super().create_dataset(name, *args, **kwargs)\n",
    "        ds.attrs.modify('user', user)\n",
    "        return self._h5ds(ds.id)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30add8fc-608a-4d00-8972-97a7d411d1c6",
   "metadata": {},
   "source": [
    "The main file wrapper inherites from `H5File` (\"root\" parent was `h5py.File`) and the new group class. Next, we have set the group and dataset class again, since some methods in the file wrapper class will need that information when returning instances of those classes (e.g. dataset or group creation). Finally we define a new method which sets the user name to the root attributes:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "25d3aa40-f303-46de-bd10-aef335b78427",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:45.850512Z",
     "iopub.status.busy": "2022-08-12T13:19:45.850512Z",
     "iopub.status.idle": "2022-08-12T13:19:45.866128Z",
     "shell.execute_reply": "2022-08-12T13:19:45.866128Z"
    }
   },
   "outputs": [],
   "source": [
    "class MyWrapper(h5tbx.H5File, MyGroup):\n",
    "    \n",
    "    def set_user(self, user_name):\n",
    "        self.attrs.modify('user', user_name)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1323ffa4-e8af-4dac-9d8a-f4248eeb3fac",
   "metadata": {},
   "source": [
    "register the dataset and group class in all classes. This is needed, so all return objects are of the newly defined types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e76a3499-b6d2-42f4-b56e-1f04537ef840",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:45.866128Z",
     "iopub.status.busy": "2022-08-12T13:19:45.866128Z",
     "iopub.status.idle": "2022-08-12T13:19:45.881762Z",
     "shell.execute_reply": "2022-08-12T13:19:45.881762Z"
    }
   },
   "outputs": [],
   "source": [
    "MyGroup._h5ds = MyDataset\n",
    "MyGroup._h5grp = MyGroup\n",
    "\n",
    "MyDataset._h5ds = MyDataset\n",
    "MyDataset._h5grp = MyGroup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "69af921f-03e8-4c8d-a08f-122472551ce6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:45.881762Z",
     "iopub.status.busy": "2022-08-12T13:19:45.881762Z",
     "iopub.status.idle": "2022-08-12T13:19:45.897481Z",
     "shell.execute_reply": "2022-08-12T13:19:45.897395Z"
    }
   },
   "outputs": [],
   "source": [
    "h5 = MyWrapper()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b91e4b80-65f2-4f21-994e-c0edfed59608",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:45.897481Z",
     "iopub.status.busy": "2022-08-12T13:19:45.897481Z",
     "iopub.status.idle": "2022-08-12T13:19:45.913128Z",
     "shell.execute_reply": "2022-08-12T13:19:45.913128Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "__main__.MyWrapper"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(h5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "95bf3100-bb07-441a-a868-309b0ac9aef2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:45.913128Z",
     "iopub.status.busy": "2022-08-12T13:19:45.913128Z",
     "iopub.status.idle": "2022-08-12T13:19:45.930688Z",
     "shell.execute_reply": "2022-08-12T13:19:45.930688Z"
    }
   },
   "outputs": [],
   "source": [
    "g = h5.create_group('grp', overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "3ba35edf-01dd-4515-a391-60a7f74f745b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:45.930688Z",
     "iopub.status.busy": "2022-08-12T13:19:45.930688Z",
     "iopub.status.idle": "2022-08-12T13:19:45.946416Z",
     "shell.execute_reply": "2022-08-12T13:19:45.946416Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "__main__.MyGroup"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(g)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "352c04bd-febe-438f-aca3-07ced3e2eff7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:45.946416Z",
     "iopub.status.busy": "2022-08-12T13:19:45.946416Z",
     "iopub.status.idle": "2022-08-12T13:19:45.961970Z",
     "shell.execute_reply": "2022-08-12T13:19:45.961970Z"
    }
   },
   "outputs": [],
   "source": [
    "gg = g.create_group('grp', overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "84f79b60-7a7d-41cc-804d-b3aee800d55e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:45.961970Z",
     "iopub.status.busy": "2022-08-12T13:19:45.961970Z",
     "iopub.status.idle": "2022-08-12T13:19:45.977702Z",
     "shell.execute_reply": "2022-08-12T13:19:45.977702Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "__main__.MyGroup"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(gg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "27815724-5671-4229-868e-5e5a82213012",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:45.977702Z",
     "iopub.status.busy": "2022-08-12T13:19:45.977702Z",
     "iopub.status.idle": "2022-08-12T13:19:45.993244Z",
     "shell.execute_reply": "2022-08-12T13:19:45.993244Z"
    }
   },
   "outputs": [],
   "source": [
    "ds = gg.create_dataset('hello', user='test user', shape=(2,3), units='', long_name='a long name', overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "2e6f82e1-008d-41fe-b6a3-92d3ee29f6ee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:45.993244Z",
     "iopub.status.busy": "2022-08-12T13:19:45.993244Z",
     "iopub.status.idle": "2022-08-12T13:19:46.008875Z",
     "shell.execute_reply": "2022-08-12T13:19:46.008875Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "/grp/grp/hello\n",
       "long_name  a long name\n",
       "units      \n",
       "user       test user"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3bb4bdff-08a4-49d8-811b-a7b59f87960b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:46.008875Z",
     "iopub.status.busy": "2022-08-12T13:19:46.008875Z",
     "iopub.status.idle": "2022-08-12T13:19:46.024507Z",
     "shell.execute_reply": "2022-08-12T13:19:46.024507Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "__main__.MyDataset"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(ds)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f83c9df4-918c-4867-932c-2502e241f1e0",
   "metadata": {},
   "source": [
    "## Accessors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "7db61f68-d569-4419-b8cd-9f4985cf79b8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:46.024507Z",
     "iopub.status.busy": "2022-08-12T13:19:46.024507Z",
     "iopub.status.idle": "2022-08-12T13:19:46.040558Z",
     "shell.execute_reply": "2022-08-12T13:19:46.040558Z"
    }
   },
   "outputs": [],
   "source": [
    "from h5rdmtoolbox.wrapper.accessory import register_special_dataset, register_special_property"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "d81d0a38-b005-4703-aa62-f0b78f6665d8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:46.040558Z",
     "iopub.status.busy": "2022-08-12T13:19:46.040558Z",
     "iopub.status.idle": "2022-08-12T13:19:46.056302Z",
     "shell.execute_reply": "2022-08-12T13:19:46.056302Z"
    }
   },
   "outputs": [],
   "source": [
    "import xarray as xr\n",
    "@register_special_dataset('user', h5tbx.wrapper.h5file.H5Dataset)\n",
    "class InfoProperty:\n",
    "    \"\"\"Device Accessor class\"\"\"\n",
    "\n",
    "    def __init__(self, ds):\n",
    "        self._ds = ds\n",
    "        self._username = 'NoName'\n",
    "\n",
    "    @property\n",
    "    def name(self):\n",
    "        return self._username\n",
    "    \n",
    "    @name.setter\n",
    "    def name(self, new_name):\n",
    "        self._username = new_name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "c724a25f-6a82-4ead-b3f7-a0e7ea1f806c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:46.056302Z",
     "iopub.status.busy": "2022-08-12T13:19:46.056302Z",
     "iopub.status.idle": "2022-08-12T13:19:46.071937Z",
     "shell.execute_reply": "2022-08-12T13:19:46.071937Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<__main__.InfoProperty object at 0x000001CF928F24C0>\n",
      "NoName\n"
     ]
    }
   ],
   "source": [
    "with h5tbx.H5File() as h5:\n",
    "    ds = h5.create_dataset('test', shape=(2,), units='', standard_name='standard_test')\n",
    "    print(ds.user)\n",
    "    print(ds.user.name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "25a7bb69-36f2-46c8-9a7c-ab722a1e6bb3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:46.074239Z",
     "iopub.status.busy": "2022-08-12T13:19:46.074239Z",
     "iopub.status.idle": "2022-08-12T13:19:46.089963Z",
     "shell.execute_reply": "2022-08-12T13:19:46.089963Z"
    }
   },
   "outputs": [],
   "source": [
    "# register a property with setter and getter method:\n",
    "@register_special_property(h5tbx.wrapper.h5file.H5Dataset, overwrite=True)\n",
    "class username:\n",
    "    \"\"\"User Name Property\"\"\"\n",
    "\n",
    "    def get(self):\n",
    "        \"\"\"geter method\"\"\"\n",
    "        return self.attrs['user_name']\n",
    "\n",
    "    def set(self, user_name: str):\n",
    "        self.attrs['user_name'] = user_name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "7ddd1be6-78b5-4913-88c3-04eac82e600c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-08-12T13:19:46.089963Z",
     "iopub.status.busy": "2022-08-12T13:19:46.089963Z",
     "iopub.status.idle": "2022-08-12T13:19:46.121240Z",
     "shell.execute_reply": "2022-08-12T13:19:46.121240Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<__main__.InfoProperty object at 0x000001CF928F24F0>\n",
      "NoName\n",
      "First User\n",
      "Second User\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<head><style>/*\r\n",
       "CSS inspired by xarray: https://github.com/pydata/xarray\r\n",
       "*/\r\n",
       ".h5tb-header > div,\r\n",
       ".h5tb-header > ul {\r\n",
       "    display: inline;\r\n",
       "    margin-top: 0;\r\n",
       "    margin-bottom: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dataarray-cls,\r\n",
       ".h5tb-dataarray-name {\r\n",
       "    margin-left: 2px;\r\n",
       "    margin-right: 10px;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dataarray-name {\r\n",
       "    color: #000;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections {\r\n",
       "    list-style: none;\r\n",
       "    padding: 3px;\r\n",
       "    margin: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections input {\r\n",
       "    display: none;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections label {\r\n",
       "    display: inline;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input + label > span {\r\n",
       "    display: inline;\r\n",
       "    margin-left: 4px;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input:checked + label > span {\r\n",
       "    display: none;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections input:enabled + label {\r\n",
       "    cursor: pointer;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections input:not(.h5tb-values-in) ~ ul {\r\n",
       "    display: none;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections input:not(.h5tb-values-in):checked ~ ul {\r\n",
       "    display: block;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input + label {\r\n",
       "    width: 140px;\r\n",
       "    color: #555;\r\n",
       "    font-weight: 500;\r\n",
       "    padding: 4px 0 2px 0;\r\n",
       "}\r\n",
       "\r\n",
       "\r\n",
       ".h5grp-sections > li > input + label:before {\r\n",
       "    display: inline-block;\r\n",
       "    content: '+';\r\n",
       "    font-size: 11px;\r\n",
       "    width: 15px;\r\n",
       "    text-align: center;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input:disabled + label:before {\r\n",
       "    color: #777;\r\n",
       "}\r\n",
       "\r\n",
       ".h5grp-sections > li > input:checked + label:before {\r\n",
       "    content: '-';\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list {\r\n",
       "    display: inline-block !important;\r\n",
       "    list-style: none;\r\n",
       "    padding: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list li {\r\n",
       "    display: inline-block;\r\n",
       "    padding: 0;\r\n",
       "    margin: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list:before {\r\n",
       "    content: '(';\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list:after {\r\n",
       "    content: ')';\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-list li:not(:last-child):after {\r\n",
       "    content: ',';\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-has-index {\r\n",
       "    text-decoration: underline;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list {\r\n",
       "    list-style: none;\r\n",
       "    padding: 0;\r\n",
       "    margin: 0;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list > li {\r\n",
       "    background-color: #fcfcfc;\r\n",
       "    overflow: hidden;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list > li:nth-child(odd) {\r\n",
       "    background-color: #efefef;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list li:hover {\r\n",
       "    background-color: rgba(3, 169, 244, .2);\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-var-list li > span {\r\n",
       "    display: inline-block;\r\n",
       "}\r\n",
       "\r\n",
       "input.h5tb-varname-in + label {\r\n",
       "    width: 140px;\r\n",
       "    padding-left: 0;\r\n",
       "    font-weight: bold;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dataset {\r\n",
       "    width: 100px;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-attributevalue {\r\n",
       "    width: 100px;\r\n",
       "    text-align: left;\r\n",
       "    color: #888;\r\n",
       "    white-space: nowrap;\r\n",
       "    font-size: 12px;\r\n",
       "}\r\n",
       "\r\n",
       "input.h5tb-varname-in + label:before {\r\n",
       "    content: ' ';\r\n",
       "    display: inline-block;\r\n",
       "    font-size: 11px;\r\n",
       "    width: 15px;\r\n",
       "    padding-left: 2px;\r\n",
       "    padding-right: 2px;\r\n",
       "    text-align: center;\r\n",
       "    color: #aaa;\r\n",
       "    text-decoration: none !important;\r\n",
       "}\r\n",
       "\r\n",
       "input.h5tb-varname-in:enabled + label:hover:before {\r\n",
       "    color: #000;\r\n",
       "}\r\n",
       "\r\n",
       "input.h5tb-varname-in:checked + label:before {\r\n",
       "    color: #ccc;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dims {\r\n",
       "    width: 280px;\r\n",
       "    white-space: nowrap;\r\n",
       "}\r\n",
       "\r\n",
       "\r\n",
       ".h5tb-unit {\r\n",
       "    width: 96px;\r\n",
       "    white-space: nowrap;\r\n",
       "    padding-right: 2px;\r\n",
       "    text-align: right;\r\n",
       "    color: #555;\r\n",
       "    font-style: italic;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-attr-list {\r\n",
       "    list-style: none;\r\n",
       "    background-color: #fff;\r\n",
       "    padding-bottom: 6px;\r\n",
       "    color: #555;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-attr-list li,\r\n",
       ".h5tb-attr-list li:hover {\r\n",
       "    background-color: #fff;\r\n",
       "}\r\n",
       "\r\n",
       ".h5tb-dim-highlight {\r\n",
       "    background-color: rgba(3, 169, 244, .2);\r\n",
       "    cursor: pointer;\r\n",
       "}</style></head>\n",
       "<p>tmp2.hdf</p>\n",
       "<p>Check resuted in 1 issues.</p>\n",
       "\n",
       "<div class='h5tb-warp'>\n",
       "\n",
       "          <ul style=\"list-style-type: none;\" class=\"h5grp-sections\">\n",
       "                <li>\n",
       "                    <input id=\"group-ds-/-3801336300\" type=\"checkbox\" checked>\n",
       "                    <label style=\"font-weight: bold\" for=\"group-ds-/-3801336300\">\n",
       "                    /<span>(1)</span></label>\n",
       "              \n",
       "\n",
       "                <ul class=\"h5tb-attr-list\"><li style=\"list-style-type: none; font-style: italic\">__h5rdmtoolbox_version__ : 0.1.0</li><li style=\"list-style-type: none; font-style: italic\">__standard_name_table__ : EmptyStandardizedNameTable-v0</li><li style=\"list-style-type: none; font-style: italic\">__wrcls__ : H5File</li><li style=\"list-style-type: none; font-style: italic\">creation_time : 2022-08-12T15:19:46Z</li>\n",
       "                </ul>\n",
       "\n",
       "                <ul id=\"ds-1-/test-3802582200\" class=\"h5tb-var-list\">\n",
       "                <input id=\"ds-2-/test-3802585000\" class=\"h5tb-varname-in\" type=\"checkbox\">\n",
       "                <label class='h5tb-varname' \n",
       "                    for=\"ds-2-/test-3802585000\">test</label>\n",
       "                <span class=\"h5tb-dims\">(2,)</span>  [\n",
       "                <span class=\"h5tb-unit\">-</span>]\n",
       "<ul class=\"h5tb-attr-list\"><li style=\"list-style-type: none; font-style:\n",
       "         italic\">standard_name : standard_test</li><li style=\"list-style-type: none; font-style: italic\">user_name : Second User</li>\n",
       "\n",
       "                </ul>\n",
       "\n",
       "             </ul>\n",
       "             \n",
       "</li>\n",
       "</ul>\n",
       "</div>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "with h5tbx.H5File() as h5:\n",
    "    ds = h5.create_dataset('test', shape=(2,), units='', standard_name='standard_test')\n",
    "    print(ds.user)\n",
    "    print(ds.user.name)\n",
    "    \n",
    "    ds.attrs['user_name'] = 'First User'\n",
    "    print(ds.username)\n",
    "    ds.username = 'Second User'\n",
    "    print(ds.username)\n",
    "    h5.dump()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4e76b065-481b-4686-8740-b672259c974b",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d8cec4c7-bdb4-484b-83f9-8e4019826c46",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
